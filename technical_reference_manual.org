#+TITLE: Space Cubics OBC FPGA Technical Reference Manual
#+SUBTITLE: 対象型番: SC-OBC-A1
#+AUTHOR: Space Cubics
#+DATE: August 16, 2022
#+EMAIL:
#+OPTIONS: ^:{}
#+OPTIONS: H:6

* Overview
Space Cubics OBC FPGA(SC OBC FPGA)は Space Cubics OBCモジュール(SC-OBC-A1)のFPGAに搭載されるシステムです。

Space Cubics OBCは 3U以上の CubeSatをターゲットとする On Board Computer(以下、OBC)です。
メインプロセッサ用デバイスとして Xilinx製 Artix-7 FPGAを採用し、FPGAにインプリする ARM Cortex-M3を核としシステムを構成します。
FPGAを採用する事で、インターフェースの種類や数を 柔軟にカスタマイズする事が可能です。

SC OBC FPGAには、ユーザーのIPコアを実装するためのモジュールが準備されており、AXIバス規格に適合した IPコアを設計する事で、簡単にシステムに組み込む事ができます。

#+CAPTION: SC OBC FPGA Block Diagram
[[file:./images/FPGABlockDiagram.png]]

SC OBC FPGAのシステムは大きく 6つの機能に分割されます。

*System Controller*

System Controllerは、FPGAのクロック, リセットを生成するためのモジュールです。
このモジュールで生成されるクロック, リセットは、FPGA全体に供給されます。

*CPU Subsystem*

Space Cubics OBCの FPGA機能を司る CPUを構成するモジュールです。
CPUには ARM製の Cortex-M3を採用しています。
ARM Cortex-M3 Design Start FPGA-Xilinx editionをベースとし、ITCM(Instruction Tightly Coupled Memory)や、バスIPなどで構成されます。

*HRMEM (High-reliability Memory)*

HRMEMは、CPUが使用するメインメモリです。
CPUとの接続は AMBA AHBで構成される CPU Local Busで行われます。

CPU Local Busは ARM Cortex-M3の Instruction code AHB, Data code AHBをまとめたバスで構成されています。
CPU Local Busでメモリと直接接続する構成とする事で、Instructionアクセスのレイテンシーを最小限に抑えるように設計されています。

*Main AXI Bus System*

Main AXI Bus Systemは、CubeSat向けの OBCシステムとして必須となる機能の中で、アクセススピードが比較的重視されるIPコアをまとめたシステムです。

このバスには、コンピュータシステムとして必要なメモリコントロールIPや CubeSatのメインの通信バスとなる CANのコントローラIPなどが接続されています。

*Low Performance IP Bus System*

Low Performance IP Bus Systemは、CubeSat向け OBCシステムとして必須となる機能の中、アクセス頻度の低いIPコアをまとめたシステムです。

このシステムは AHBを採用する事で、IPコアの回路規模を小さくする事ができます。
このバスには、システムレジスタやI2Cコントローラなどが接続されます。

*Mission Bus System*

Mission Bus SystemはユーザーがCubeSatのミッションを行うためのIPコアを接続するシステムです。
このシステムはバスに AXIを採用しています。
ユーザーが設計するIPコアは全てこのバスに接続します。

** Outline

| Feature                         | Description                                                                                 |
|---------------------------------+---------------------------------------------------------------------------------------------|
| FPGA Device                     | Xilinx Artix-7 (XC7A200T-1FBG676I)                                                          |
|                                 | - Logic Cell 215,360                                                                        |
|                                 | - CLB スライス数(4 LUT, 8 F/F) 33,650                                                       |
|                                 | - CLB 最大分散RAM 2,888 Kb                                                                  |
|                                 | - DSP48E1スライス 740                                                                       |
|                                 | - BlockRAM 36 Kb x 365 (18 Kb x 730)                                                        |
|                                 | - CMT 10                                                                                    |
|                                 | - XADC 1 (for FPGA die temperature measurement)                                             |
|                                 | - I/O Bank 10                                                                               |
| CPU Core                        | ARM Cortex-M3 Design Start FPGA Xilinx Edition r0p1                                         |
|                                 | - CPU Revision r2p1                                                                         |
|                                 | - ARMv7-M architecture profile                                                              |
|                                 | - Maximum operation frequency up to 48 MHz (※)                                             |
|                                 | ※ ユーザーが構築する回路の影響により、期待するクロック周波数で動作できない可能性があります |
| On Chip SRAM (ITCM for Boot)    | 8 KByte                                                                                     |
| HRMEM [High-reliability Memory] | 4 MByte                                                                                     |
|                                 | - ECC Memory Protection                                                                     |
|                                 | - Memory Scrubbing                                                                          |
| Internal System Bus             | CPU Local Bus: AMBA AHB3 32 bitMain Bus: AMBA AXI4 32bit                                    |
|                                 | Mission Bus (for User): AMBA AXI4 32 bit                                                    |
|                                 | Low Performance IP Bus: AMBA AHB3 32 bit                                                    |
| DMA                             | Not Support                                                                                 |
| Interrupt Support               | 16 User interrupt signal                                                                    |
| Watchdog Timer                  | Space Cubics TRCH-FPGA watchdog system                                                      |
| FPGA Configuration Memory       | 32 MByte/Redundancy (S25FL256L)                                                             |
| Data Memory                     | 32 MByte/Redundancy (S25FL256L)                                                             |
| FeRAM                           | 512 kByte x 2 (CY15B104QSN)                                                                 |
| Control Area Network (CAN)      | Conforms to the ISO 11898-1, CAN2.0A, and CAN2.0B standards Supports bit rates up to 1 Mb/s |
| Space Communication Bus (SCBus) | Revision Cでは実装されていません                                                            |
|                                 | Compliant with the USB-based communication interface proposed by Space Cubics (T.B.D.)      |
|                                 | - Supports bit rates 12 Mbps (USB Full-Speed)                                               |
| I2C Interface                   | SC OBC On Board I2C x 1 channel                                                             |
|                                 | External I2C x 1 channel                                                                    |
| FPGA User IO                    | User IO Group 1 x 16 pin (IO電圧可変)                                                       |
|                                 | User IO Group 2 x 16 pin (IO電圧可変)                                                       |
|                                 | User IO Group 4 x 6 pin, Cortex-M3 JTAG兼用 (3.3V固定)                                      |
| Debug Port                      | ARM SWJ-DP Interface                                                                        |

** IP Core Version

Space Cubicsが作成した IPコアの管理バージョンを以下に示します。
これらのバージョンは、各 IPコアのレジスタで管理されている IP Version Register (Offset: 0xF000)を読み出すことで確認することができます。

| IP Core               | Version |
|-----------------------+---------|
| System Register       | v1.0.0  |
| System Monitor        | v1.0.0  |
| General Purpose Timer | v1.0.0  |
| HRMEM                 | v1.0.0  |
| QSPI Controller       | v0.1.1  |
| CAN Controller        | v0.1.1  |
| AHB UART Lite         | v1.0.0  |
| I2C Master Controller | v0.1.1  |

* Memory Map
以下に、SC OBC FPGAのメモリマップを示します。

#+CAPTION: SC OBC FPGA Memory Map
[[file:./images/memory_map.png]]

#+CAPTION: SC OBC FPGA メモリマップ
| Field                                          | Address Space             | Comment           |
|------------------------------------------------+---------------------------+-------------------|
| Instruction Tightly Coupled Memory (Block RAM) | 0x0000_0000 - 0x0000_1FFF | CFGITCMEN[0] is 1 |
| HRMEM (SRAM)                                   | 0x0000_0000 - 0x003F_FFFF | CFGITCMEM[0] is 0 |
| Main AXI Bus                                   | 0x4000_0000 - 0x4EFF_FFFF |                   |
| - QSPI Controller (Configuration Memory)       | 0x4000_0000 - 0x4000_FFFF |                   |
| - QSPI Controller (Data Memory)                | 0x4010_0000 - 0x4010_FFFF |                   |
| - QSPI Controller(FeRAM)                       | 0x4020_0000 - 0x4020_FFFF |                   |
| - CAN Controller                               | 0x4040_0000 - 0x4040_FFFF |                   |
| - HRMEM Register                               | 0x4050_0000 - 0x4050_FFFF |                   |
| Low Performance IP Bus                         | 0x4F00_0000 - 0x4FFF_FFFF |                   |
| - System Register                              | 0x4F00_0000 - 0x4F00_FFFF |                   |
| - UART Lite (Console Interface)                | 0x4F01_0000 - 0x4F01_FFFF |                   |
| - External I2C Master                          | 0x4F03_0000 - 0x4F03_FFFF |                   |
| - System Monitor                               | 0x4F04_0000 - 0x4F04_FFFF |                   |
| - General Purpose Timer                        | 0x4F05_0000 - 0x4F05_FFFF |                   |
| Mission(UDL) Bus                               | 0x5000_0000 - 0x5FFF_FFFF |                   |
| HRMEM Memory Mirror                            | 0x6000_0000 - 0x603F_FFFF |                   |
| Coretex-M3 Internal Private peripheral bus     | 0xE000_0000 - 0xE003_FFFF |                   |
| - ITM                                          | 0xE000_0000 - 0xE000_0FFF |                   |
| - DWT                                          | 0xE000_1000 - 0xE000_1FFF |                   |
| - FPB                                          | 0xE000_2000 - 0xE000_2FFF |                   |
| - SCS                                          | 0xE000_E000 - 0xE000_EFFF |                   |
| Coretex-M3 External Private peripheral bus     | 0xE004_0000 - 0xE00F_FFFF |                   |
| - TPIU                                         | 0xE004_0000 - 0xE004_0FFF |                   |
| - ETM                                          | 0xE004_1000 - 0xE004_1FFF |                   |
| - External PPB                                 | 0xE004_2000 - 0xE00F_EFFF |                   |
| - ROM Table                                    | 0xE00F_F000 - 0xE00F_FFFF |                   |

CPUが使用する メインメモリーは アドレス 0x00000000にマッピングされています。
メインメモリーは、ITCM (Instruction Tightly Coupled Memory)と HRMEM (High Reliability Memory)を選択する事ができます。
ITCMと HRMEMの切り替えは Code Memory Select Registerの ITCMENビットによって行います。

ITCMは FPGAの Block RAMで構成されています。
このメモリは FPGAの Configurationデータ (Bit Streamデータ)にプログラムを格納する事で、FPGAの Configuration後 すぐに CPUが動作します。
HRMEMは On Boardの SRAMで構成されています。
このメモリを使用する場合には、電源の投入後にデータを書き込んで使用する必要があります。
HRMEMは IPコアの内部に SRAMのデータが放射線によって破壊された場合に訂正する仕組みを実装しているため、通常はこのメモリを使って動作します。

#+CAPTION: CPU Main Memory構成
[[file:./images/itcm_hrmem_select.png]]

FPGAの Configuration後、アドレス 0x00000000に ITCMがマッピングされています。
ITCMには プログラムローダーを書き込んで使用します。
プログラムローダーは NOR Flash Memoryに書き込まれているプログラムを HRMEMに転送するために使用します。
HRMEMのアドレス 0x60000000番地は、アドレス 0x00000000番地のミラーとなっており、プログラムローダーによって 0x60000000に書き込まれたデータは、メインメモリーを HRMEMに切り替えた時に 0x00000000から読み出す事ができます。
プログラムローダーが HRMEMへのプログラムを書き込む最後の手順として、Code Memory Select Registerの ITCMENビットを 0に書き込みます。
ITCMENビットの書き込みにより、メインメモリーを切り替えるとシステムにリセットがかかり、切り替えたメモリのアドレス 0x00000000から書き込まれたデータで CPUが動作します。

* Interrupt
SC OBC FPGAは、Cortex-M3に組み込まれる割り込みコントローラの外部割り込みを使用し、IPコアの割り込みをCPUに伝えます。
Cortex-M3の 割り込みコントローラの仕様については、ARM Cortex-M3 Technical Reference Manualを参照してください。

以下に、SC OBC FPGAの IPコアが出力する割り込みの割り当てを示します。

#+CAPTION: SC OBC FPGA割り込みリスト
| Exception No. | IRQ Bit | Interrupt                                        | Type  |
|---------------+---------+--------------------------------------------------+-------|
|            16 | [0]     | AHB UART Lite(Console)                           | Pulse |
|            17 | [1]     | HRMEM (High-reliability Memory)                  | Level |
|            18 | [2]     | QSPI Controller (Configuration Memory)           | Level |
|            19 | [3]     | QSPI Controller (Flash Data Memory)              | Level |
|            20 | [4]     | QSPI Controller (FeRAM)                          | Level |
|            21 | [5]     | CAN Controller                                   | Level |
|            22 | [6]     | Reserved (OBC System Interrupt Area)             | -     |
|            23 | [7]     | External I2C Master                              | Level |
|            24 | [8]     | System Monitor (Hardware Error)                  | Level |
|            25 | [9]     | System Monitor (Board Health Monitor)            | Level |
|            26 | [10]    | General Purpose Timer (Global Timer)             | Level |
|            27 | [11]    | General Purpose Timer (Software Interrupt Timer) | Level |
|       28 - 31 | [15:12] | Reserved (OBC System Interrupt Area)             | -     |
|       32 - 47 | [31:16] | Reserved (UDL IP Interrupt Area)                 | -     |

* System Register
System Registerは、SC OBC FPGAのシステム制御を司るレジスタで構成されるモジュールです。

** レジスタ詳細
System Registerは、Base Address 0x4F00_0000に配置されています。

#+CAPTION: System Registerメモリマップ
|    Address | Symbol           | Register                            |    Initial |
|------------+------------------+-------------------------------------+------------|
| 0x4F000000 | SYSREG_CODEMSEL  | Code Memory Select Register         | 0x00000001 |
| 0x4F000004 | SYSREG_SYSCLKCTL | System Clock Control Register       | 0x00000001 |
| 0x4F000010 | SYSREG_CFGMEMCTL | Configuration Memory Register       | 0x000x0000 |
| 0x4F000020 | SYSREG_PWRCYCLE  | Power Cycle Register                | 0x00000000 |
| 0x4F0000F0 | SYSREG_SPAD1     | Scratchpad 1 Register               | 0x00000000 |
| 0x4F0000F4 | SYSREG_SPAD2     | Scratchpad 2 Register               | 0x00000000 |
| 0x4F0000F8 | SYSREG_SPAD3     | Scratchpad 3 Register               | 0x00000000 |
| 0x4F0000FC | SYSREG_SPAD4     | Scratchpad 4 Register               | 0x00000000 |
| 0x4F00F000 | SYSREG_VER       | System Register IP Version Register |          - |
| 0x4F00FF00 | SYSREG_BUILDINFO | Build Information Register          |          - |
| 0x4F00FF10 | SYSREG_DNA1      | Device DNA 1 Register               |          - |
| 0x4F00FF14 | SYSREG_DNA2      | Device DNA 2 Register               |          - |

*** Code Memory Select Register (Offset 0x0000)
Code Memory Select Registerは CPUの Instruction codeが格納されているメモリを選択するためのレジスタです。
本レジスタの制御により、メモリ空間の アドレス 0x00000000にマッピングされるメモリを選択します。

電源投入時、ITCMENビットは "1"となっており、メモリ空間のアドレス 0x00000000には ITCMがマッピングされています。
CPUによって、ITCMENビットが "0"に書き換えられると、メモリ空間のアドレス 0x00000000に HRMEMがマッピングされます。

ITCMENビットの設定値が変更された時、システム全体にリセットが発行されます。
ITCMENビットの変更は、ITCMに書き込まれた Boot用のソフトウェアから HRMEMに書き込まれたメインのソフトウェアに遷移する時に 1度だけ制御する事を想定しています。

#+CAPTION: Code Memory Select Regsiter ビットフィールド
|   bit | Symbol    | Field           | Description                                                                                                                                                                                                          | R/W |
|-------+-----------+-----------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | ITCMENPKC | Protect Keycode | ITCMENビットの書き込みプロテクトフィールドです。ITCMENビットに書き込みを行う場合は、このフィールドに0x5A5Aを書き込んでください。このフィールドに0x5A5A以外が設定された場合、ITCMENビットへの書き込みは無視されます。 | WO  |
|  15:1 | -         | Reserved        | Reserved                                                                                                                                                                                                             | -   |
|     0 | ITCMEN    | ITCM Enable     | メモリ空間のアドレス 0x00000000にマッピングされるメモリを選択します。0: HRMEM 1: ITCMEN                                                                                                                              | R/W |

*** System Clock Control Register (Offset 0x0004)
System Clock Control Registerは、システム内部で使われるクロックの周波数を設定するためのレジスタです。

このレジスタの制御により、SC OBC FPGA内部の PLLを停止させ、低消費電力動作させることが可能です。

#+CAPTION: System Clock Control Register ビットフィールド
|  bit | Symbol  | Field           | Description                                                                                                                                | R/W |
|------+---------+-----------------+--------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:2 | -       | Reserved        | Reserved                                                                                                                                   | -   |
|  1:0 | CLKMODE | CLKMODE Control | システムのクロックモードを制御します。設定値とクロック周波数の関係は "CLKMODE設定と PLL状態 及び クロック周波数の関係"を参照してください。 | R/W |

CLKMODE信号の設定値と、PLLの状態 及び システムクロック周波数の関係は以下となります。

#+CAPTION: CLKMODE設定と PLL状態 及び クロック周波数の関係
| CLKMODE[1:0]    | PLL Status       | REF_CLK                  | SYS_CLK                  | MAXI_CLK                 | USER_CLK1 / USER_CLK2                             |
|-----------------+------------------+--------------------------+--------------------------+--------------------------+---------------------------------------------------|
| 0b00            | PowerDown        | 24 MHz (Reference Clock) | 24 MHz (Reference Clock) | 24 MHz (Reference Clock) | RTLパラメータにより設定 (Stop or Reference Clock) |
| 0b01            | Normal Operation | 24 MHz (Reference Clock) | 48 MHz (PLL Output)      | 48 MHz (PLL Output)      | RTLパラメータにより設定 (PLL Output)              |
| 0b10            | Normal Operation | 24 MHz (Reference Clock) | 96 MHz (PLL Output)      | 96 MHz (PLL Output)      | RTLパラメータにより設定 (PLL Output)              |
| 0b11 (設定禁止) | -                | -                        | -                        | -                        | -                                                 |

*** Configuration Memory Register (Offset 0x0010)
Configuration Memory Registerは SC OBC Moduleに実装される 2つの Configuration Memory (NOR FLash Memory)に関する制御を行うためのレジスタです。

#+CAPTION: Configuration Memory Register ビットフィールド
|   bit | Symbol      | Field                        | Description                                                                                                                                                                                                                                                                                                                          | R/W |
|-------+-------------+------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:13 | -           | Reserved                     | Reserved                                                                                                                                                                                                                                                                                                                             | -   |
|    12 | CFGBOOTMEM  | Boot Memory                  | SC OBC FPGAが Configurationsに使用した Configuration Memoryを示すビットです。このフィールドを読み出す事で、SC OBC FPGAがどちらの Configuration Memoryから起動したか知る事ができます。SC OBC FPGAの Configuration後 Resetが解除される時に確定します。                                                                                 | RO  |
|  11:6 | -           | Reserved                     | Reserved                                                                                                                                                                                                                                                                                                                             | -   |
|     5 | CFGMEMMON   | Configuration Memory Monitor | 現在選択されている Configuration Memoryの選択状態を示すビットです。                                                                                                                                                                                                                                                                  | RO  |
|     4 | CFGMEMSEL   | Configuration Memory Select  | Configuration Memoryを選択するためのビットです。CFGMEMOWNERフィールドが "0"にクリアされている時のみ、このビットが有効になります。0: Configuration Memory 0を選択. 1: Configuration Memory 1を選択                                                                                                                                    | R/W |
|   3:1 | -           | Reserved                     | Reserved                                                                                                                                                                                                                                                                                                                             | -   |
|     0 | CFGMEMOWNER | Configuration Memory Owner   | Configuration Memoryの選択をレジスタによって選択するか、QSPIコアによって選択するかを決定するフィールドです。0: Configuration Memoryは CFGMEMSELビットにより選択される. 1: Configuration Memoryは QSPIコアにより選択される. QSPIコアによる Configuration Memoryのメモリパトロールを行う場合は、このビットを "1"にセットしてください。 | R/W |

Configuration Memoryの選択は、以下の 3つの制御状態を持っています。

| 状態               | 選択条件                                                           |
|--------------------+--------------------------------------------------------------------|
| TRCHによる選択     | OBC Moduleへの電源投入後、TRCHが FPGAの 起動完了を認識するまでの間 |
| レジスタによる選択 | TRCHが FPGAの Configuration完了を認識し、且つ CFGMEMOWNER=0の場合  |
| QSPIコアによる選択 | TRCHが FPGAの Configuration完了を認識し、且つ CFGMEMOWNER=1の場合  |

SC OBC FPGAが Configurationし TRCHが FPGAの起動完了を認識する間、Configuration Memoryの選択は TRCHによって行われます。
この仕様により、SC OBC FPGAが Configurationするための Memoryは TRCHによって選択されます。

TRCHが FPGAの起動完了を認識すると、Configuration Memoryの制御権は FPGAに移行します。
FPGAは CFGMEMSELビットの設定によって、ソフトウェアによる選択を行うか、QSPIコアによる選択を行うかを決定します。

CFGMEMSELビットの設定変更により、選択する Configuration Memoryの切り替えを行う場合は、設定の変更後に CFGMEMMONビットを読み出し、切り替えの設定が完了していることを確認する必要があります。

現在の SC OBC FPGAには QSPIコアによる Configuration Memoryのメモリパトロール機能は実装されていません。
CFGMEMOWNERビットを "1"に設定した場合 Configuration Memoryの選択が正しく行われないため、CFGMEMOWNERビットは "0"から変更しないでください。

*** Power Cycle Register (Offset 0x0020)
Power Cycle Registerは SC OBC FPGAに対する Power Cycle要求を発行するためのレジスタです。

このレジスタの制御により Power Cycleを要求すると、TRCHによって Power Cycleが実行されます。

#+CAPTION: Power Cycle Register ビットフィールド
|   bit | Symbol      | Field                       | Description                                                                                                                                                                                                                         | R/W |
|-------+-------------+-----------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | PWRCYCLEPKC | Power Cycle Protect Keycode | PWRCYCLEREQビットの書き込みプロテクトフィールドです。PWRCYCLEREQビットに書き込みを行う場合は、このフィールドに0x5A5Aを書き込んでください。このフィールドに0x5A5A以外が設定された場合、PWRCYCLEREQビットへの書き込みは無視されます。 | WO  |
|  15:1 | -           | Reserved                    | Reserved                                                                                                                                                                                                                            | -   |
|     0 | PWRCYCLEREQ | Power Cycle Request         | TRCHに対し Power Cycle Requestを発行するためのビットです。このビットに "1"を書き込むと TRCHによる FPGAの Power Cycleが実行されます。このビットへの "0"の書き込みは何も影響しません。                                                | R/W |

*** Scratchpad 1-4 Register (Offset 0x00F0-0x00FC)
Scratchpad 1-4 Registerは、ソフトウェアがワークスペースとして使用する為のレジスタです。
このレジスタの書き込みは、SC OBC FPGAの機能に一切影響を与えません。

このレジスタは、SC OBC FPGAの Configuration後に一度だけ初期化されます。
Code Memory Select Registerの ITCMENビットが変更された時に発行されるシステムリセットでは、このレジスタはクリアされません。

#+CAPTION: Scratchpad 1 Register ビットフィールド (Offset: 0x00F0)
|  bit | Symbol | Field        | Description                       | R/W |
|------+--------+--------------+-----------------------------------+-----|
| 31:0 | SPAD1  | Scratchpad 1 | 32bitのScratchpadフィールドです。 | R/W |

#+CAPTION: Scratchpad 2 Register ビットフィールド (Offset: 0x00F4)
|  bit | Symbol | Field        | Description                       | R/W |
|------+--------+--------------+-----------------------------------+-----|
| 31:0 | SPAD2  | Scratchpad 2 | 32bitのScratchpadフィールドです。 | R/W |

#+CAPTION: Scratchpad 3 Register ビットフィールド (Offset: 0x00F8)
|  bit | Symbol | Field        | Description                       | R/W |
|------+--------+--------------+-----------------------------------+-----|
| 31:0 | SPAD3  | Scratchpad 3 | 32bitのScratchpadフィールドです。 | R/W |

#+CAPTION: Scratchpad 4 Register ビットフィールド (Offset: 0x00FC)
|  bit | Symbol | Field        | Description                       | R/W |
|------+--------+--------------+-----------------------------------+-----|
| 31:0 | SPAD4  | Scratchpad 4 | 32bitのScratchpadフィールドです。 | R/W |

*** System Register IP Version Register (Offset: 0xF000)
System Registerの IPコアバージョンの管理レジスタです。

#+CAPTION: System Register IP Version Register ビットフィールド
|   bit | Symbol | Field                              | Description                              | R/W |
|-------+--------+------------------------------------+------------------------------------------+-----|
| 31:24 | MAJVER | System Register Core Major Version | System RegisterコアのMajor Versionです。 | RO  |
| 23:16 | MINVER | System Register Core Minor Version | System RegisterコアのMinor Versionです。 | RO  |
|  15:0 | PATVER | System Register Core Patch Version | System RegisterコアのPatch Versionです。 | RO  |

*** Build Information Register (Offset: 0xFF00)
SC OBC FPGAのビルド情報を保持するレジスタです。
現在動作しているFPGAデータが作られた gitのハッシュ値の 先頭 8文字が保持されます。
git管理されていない環境から生成された場合は、このレジスタが 0x00000000を示します。

#+CAPTION: Build Information Register ビットフィールド
|  bit | Symbol     | Field                      | Description                                                                           | R/W |
|------+------------+----------------------------+---------------------------------------------------------------------------------------+-----|
| 31:0 | BUILD_INFO | Build Information Register | 動作しているFPGAデータが作られた gitのハッシュ値の 先頭 8桁が格納されるレジスタです。 | RO  |

*** Device DNA 1/2 Register (Offset: 0xFF10/0xFF14)
Device DNA 1/2 Registerは、FPGAの Device DNAの値を保持するレジスタです。

Artix-7は、デバイスの eFuse領域に FUSE_DNAと呼ばれる、64 bitのデバイス固有値を保持しています。
FUSE_DNAは、FPGAの工場出荷時にプログラミングされるものであり、値を変える事はできません。

FPGAからは、FUSE_DNAのうち 63 bitから 7 bitを、Device DNAとして読み出す事ができます。
ユーザーは Device DNA 1/2 Registerを読み出す事によって、Device DNAの値を知る事ができます。

#+CAPTION: Device DNA 1 Register ビットフィールド
|  bit | Symbol  | Field               | Description                                     | R/W |
|------+---------+---------------------+-------------------------------------------------+-----|
| 31:7 | DNA_LSB | Device DNA LSB side | Device DNAの bit 31:7が格納されるレジスタです。 | RO  |
|  6:0 | -       | Reserved            | Reserved                                        | -   |

#+CAPTION: Device DNA 2 Register ビットフィールド
|  bit | Symbol  | Field               | Description                                      | R/W |
|------+---------+---------------------+--------------------------------------------------+-----|
| 31:0 | DNA_MSB | Device DNA MAB side | Device DNAの bit 63:32が格納されるレジスタです。 | RO  |

* System Monitor
System Monitorは、SC OBC FPGAのシステムを監視するためのモジュールです。

SC OBCのシステムは、TRCHによって監視されます。
SC OBC FPGAは System Monitorが収集した FPGA内部の状態を Watchdog signal (FPGA_WATCHDOG)を通じて TRCHに伝えます。
TRCHは FPGAが出力する FPGA_WATCHDOG信号が定期的にトグルしている間、FPGAが健全に動作していると判断します。

** SEM Controller
SEM (Soft Error Mitigation) Controllerは、Xilinx FPGAのコンフィギュレーションメモリで発生したソフトエラーの検出 及び訂正を行う、Xilinxから提供されるソリューションです。
SC OBC FPGAはこの機能をシステムに組み込み、SEM Controllerの状態を System Monitorのレジスタから読み出す機能を持っています。

CPUが正常に動作している場合でも、SEM Controllerが訂正不能なエラーを検出した場合や、SEM Controller自体に障害が発生した場合には、SC OBC FPGAに深刻な障害が発生する可能性があります。
そのため、深刻な障害が発生する前に再起動することにより、システムを健全な状態に保つ事が可能です。

SC OBC FPGAは以下の構成でSEM Controllerを実装しています。

| 項目                | 設定       | 説明                                                                                                                                                           |
|---------------------+------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------|
| エラー訂正/修復方法 | 拡張修復   | ECCおよび CRCアルゴリズムに基づく訂正を行います。1ビットのエラーまたは、隣接する 2ビットのエラーを訂正します。                                                 |
| エラー分類機能      | 未サポート | 検出したすべてのエラーがエッセンシャルビットか非エッセンシャルビットかの分類はできません。全てエッセンシャルビットと判断します。                               |
| エラーモニタ機能    | 未サポート | SEM Controllerが持つモニターインタフェースは実装していません。System Monitorのレジスタから簡易的なステータスを参照することにより、SEM Controllerを管理します。 |
| エラー挿入機能      | サポート   | ソフトウェアのテストのため、エラーを強制的に挿入する機能を持っています。                                                                                       |

SEM Controllerの仕様詳細については、Xilinxドキュメント「PG036: LogicCORE IP Soft Error Mitigation Controller v4.1 製品ガイド」を参照してください。

*** SEM Controller Interrupt
SEM Controllerは 4つの要因の割り込みを出力します。
SEM Controllerの割り込みは、System Monitor Interrupt Registerのビット 11:8にマッピングされています。

- SEM Error Correction Interrupt
SEM Controllerがコンフィギュレーションメモリのエラーを検知し、訂正・修復した事を示す通知ビットです。
この割り込みは、SEM Controllerが正常にコンフィギュレーションメモリのエラーを訂正し修復した事を示すものであり、システムは健全に保たれている事を示します。
この割り込みがセットされる時、SEM Error Correction Count Registerの値が +1されます。

- SEM Uncorrectable Interrupt
SEM Controllerがコンフィギュレーションメモリに訂正不能なエラーを検出した事を示す通知ビットです。
この割り込みが発生した時、コンフィギュレーションメモリには障害が発生しています。
エッセンシャルビットに障害が起きた場合、FPGAの回路が不正な状態となっている可能性があります。
そのため、このエラーが発生した場合はシステムを再起動する事を推奨します。

- SEM Halted Interrupt
SEM Controllerが Haltした事を示す通知ビットです。
この割り込みは何らかの異常により、SEM Controllerに自体に障害が起き、動作を停止した事を示します。
このエラーが発生した後は、SEM Controllerによるコンフィギュレーションメモリのエラー検出と訂正は行われません。
そのため、このエラーが発生した場合はシステムを再起動する事を推奨します。

- SEM Heartbeat Timeout Interrupt
SEM Controllerの Heartbeat信号が停止した事を示す通知ビットです。
この割り込みは何らかの異常により、SEM Controllerに障害が起き、Heartbeat信号を出力できなくなった事を示します。
このエラーが発生した後は、SEM Controllerが正常に動作していない可能性があります。
そのため、このエラーが発生した場合はシステムを再起動する事を推奨します。

** レジスタ詳細
System Monitorは、Base Address 0x4F04_0000に配置されています。

#+CAPTION: System Monitorメモリマップ
|                 Address | Symbol              | Register                                 |    Initial |
|-------------------------+---------------------+------------------------------------------+------------|
|              0x4F040000 | SYSMON_WDOG_CTRL    | Watchdog Control Register                | 0x00075A5A |
|              0x4F040010 | SYSMON_WDOG_SIVAL   | Watchdog Signal Interval Register        | 0x00B71AFF |
|              0x4F040030 | SYSMON_INT_STATUS   | System Monitor Interrupt Status Register | 0x00000000 |
|              0x4F040034 | SYSMON_INT_ENABLE   | System Monitor Interrupt Enable Register | 0x00000000 |
|              0x4F040040 | SYSMON_SEM_STATE    | SEM Controller State Register            | 0x00000000 |
|              0x4F040044 | SYSMON_SEM_ECCOUNT  | SEM Error Correction Count Register      | 0x00000000 |
|              0x4F040048 | SYSMON_SEM_HTIMEOUT | SEM Heartbeat Timeout Register           | 0x000000FF |
|              0x4F040050 | SYSMON_SEM_EINJECT1 | SEM Error Injection Command Register 1   | 0x00000000 |
|              0x4F040054 | SYSMON_SEM_EINJECT2 | SEM Error Injection Command Register 2   | 0x00000000 |
| 0x4F041000 - 0x4F041FFF | SYSMON_XADC_REG     | XADC Register Window                     | ---------- |

*** Watchdog Control Register (Offset 0x0000)
Watchdog Control Registerは、SC OBC FPGAの Watchdogの制御を行うためのレジスタです。
本レジスタにより Watchdog Counterの満了時間の設定や、Software Watchdog Timerをリロードする事ができます。

システムの起動後、SC OBC FPGAの Watchdog Timer回路は、TRCHに対し Watchdog信号のトグルを開始します。
ソフトウェアは Software Watcdog Timeフィールドに設定されている Software Watchdog Timerの満了時間以内に、Watchdog Service Registerにアクセスし Software Watchdog Timerをリロードする必要があります。
Software Watchdog Timerが満了すると、SC OBC FPGAの Watchdog Timer回路は、TRCHに対する Watchdog信号のトグルを停止し、TRCHに対しソフトウェアに異常が起きた事を通知します。

初期状態では、Software Watchdog Timerのの満了時間は 128 [sec] に設定されています。
ソフトウェアが、定期的にSoftware Watchdog Timerをリロードできる状態となった後、Software Watchdog Timeフィールドを適切な値に変更する事で 異常検知のタイミングを設定する事ができます。

#+CAPTION: Watchdog Control Register ビットフィールド
|   bit | Symbol       | Field                     | Description                                                                                                                                                                                                                                                                            | R/W |
|-------+--------------+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:19 | -            | Reserved                  | Reserved                                                                                                                                                                                                                                                                               | -   |
| 18:16 | SW_WDOG_TIME | Software Watchdog Time    | Software Watchdog Timerの満了時間を設定するためのフィールドです。0x0: 1 [sec] 0x1: 2 [sec] 0x2: 4 [sec] 0x3: 8 [sec] 0x4: 16 [sec] 0x5: 32 [sec] 0x6: 64 [sec] 0x7: 128 [sec]                                                                                                          | R/W |
|  15:0 | WDOG_WSR     | Watchdog Service Register | Software Watchdog Timerをリロードするためのフィールドです。0x5A5Aと 0xA5A5を交互に書き込む事で、Software Watchdog Timerをリロードする事ができます。このフィールドを読み出すと、Software Watchdog Timerをリロードするために次に書き込む値(0x5A5A または 0xA5A5)を読み出す事ができます。 | R/W |

*** Watchdog Signal Interval Register (Offset 0x0010)
Watchdog Signal Interval Registerは、FPGA_WATCHDOG信号のトグル間隔を設定するためのレジスタです。

FPGA_WATCHDOGが Highレベル または Lowレベルとなるクロックサイクル数を規定します。Watchdog Signalのカウンタは 24 MHzで動作するため、以下の式で設定値を求める事ができます。

#+BEGIN_QUOTE
$WDOG\_SIVAL設定値 = \frac{FPGA\_WATCHDOG\ High/Lowレベル幅 [s]}{\frac{1}{24 \times 10^{6}}} - 1$
#+END_QUOTE

#+CAPTION: Watchdig Signal Interval Registerビットフィールド
|   bit | Symbol     | Field                    | Description                                                                                                     | R/W |
|-------+------------+--------------------------+-----------------------------------------------------------------------------------------------------------------+-----|
| 31:24 | -          | Reserved                 | Reserved                                                                                                        | -   |
|  23:0 | WDOG_SIVAL | Watchdog Signal Interval | Watchdog Signalの Highレベルまたは Lowレベルの幅を設定するフィールドです。初期値は 500 [ms]に設定されています。 | R/W |

*** Clock Monitor Register (Offset 0x0020)
Clock Monitor Registerは、SC OBC FPGAのクロック状態を示すレジスタです。

#+CAPTION: Clock Monitor Register ビットフィールド
|   bit | Symbol      | Field                       | Description                                                                                                                                                                                         | R/W |
|-------+-------------+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:17 | -           | Reserved                    | Reserved                                                                                                                                                                                            | -   |
|    16 | PLL_LOCK    | PLL Lock Status             | SC OBC FPGAの PLLの状態を示します。0: PLL Unlock 1: PLL LOCK                                                                                                                                        | RO  |
| 15:13 | -           | Reserved                    | Reserved                                                                                                                                                                                            | -   |
|    12 | UCLK2_STS   | User Clock 2 Status         | User Clock 2のクロックの動作状態を示します。 0: クロック停止中 1: クロック動作中                                                                                                                    | RO  |
|    11 | UCLK1_STS   | User Clock 1 Status         | User Clock 1のクロックの動作状態を示します。 0: クロック停止中 1: クロック動作中                                                                                                                    | RO  |
|    10 | ULPICLK_STS | ULPI Reference Clock Status | ULPI Reference Clockのクロックの動作状態を示します。 0: クロック停止中 1: クロック動作中                                                                                                            | RO  |
|     9 | MAXICLK_STS | Main AXI Clock Status       | Main AXI Clockのクロックの動作状態を示します。 0: クロック停止中 1: クロック動作中                                                                                                                  | RO  |
|     8 | SYSCLK_STS  | System Clock Status         | System Clockのクロックの動作状態を示します。 0: クロック停止中 1: クロック動作中                                                                                                                    | RO  |
|   7:2 | -           | Reserved                    | Reserved                                                                                                                                                                                            | -   |
|   1:0 | OSC_CLKEN   | OSC Clock Enable            | SC OBC FPGAの入力クロック (源発信クロック)の Enable信号の状態を示します。bit 0: Oscillator 1の状態を示します。 bit 1: Oscillator 2の状態を示します。これらのビットが "1"の時、クロックは Enableです。 | RO  |

*** Hardware Status 1/2 Register (Offset 0x0024/Offset 0x0028)
Hardware Status Registerは、SC OBC FPGAのハードウェアの状態を示すレジスタです。

このレジスタは、ソフトウェアから見ると、Scratchpadとして動作します。
Loaderによって、ハードウェアの健全性が確認されるとこのレジスタに書き込みを行います。
Flight Softwareは、起動時にこのレジスタを読み出す事で、ハードウェアの健全性を知る事ができます。

このレジスタは、SC OBC FPGAの Configuration後に一度だけ初期化されます。
Code Memory Select Registerの ITCMENビットがセットされた時に発行されるシステムリセットでは、このレジスタはクリアされません。

このレジスタのフィールドの詳細は未定です。

#+CAPTION: Hardware Status 1 Register ビットフィールド
|  bit | Symbol        | Field             | Description | R/W |
|------+---------------+-------------------+-------------+-----|
| 31:0 | HWARE_STATUS1 | Hardware Status 1 | T.B.D.      | R/W |

#+CAPTION: Hardware Status 2 Register ビットフィールド
|  bit | Symbol        | Field             | Description | R/W |
|------+---------------+-------------------+-------------+-----|
| 31:0 | HWARE_STATUS2 | Hardware Status 2 | T.B.D.      | R/W |

*** System Monitor Interrupt Status Register (Offset 0x0030)
System Monitor Interrupt Status Registerは、System Monitorの割り込みステータスレジスタです。
それぞれのビットは"1"をセットすると、割り込みをクリアする事ができます。

SEM Controllerの異常を示すビット (bit 9、bit 10、bit 11) は、"1"をセットすると割り込みをクリアする事はできますが、SEM Controllerの異常が取り除かれるわけではないため、システムの再起動を行う必要があります。

#+CAPTION: System Monitor Interrupt Status Registerビットフィールド
|  bit | Symbol            | Field                           | Description                                                                                                                                                                                                         | R/W  |
|------+-------------------+---------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------|
| 31:5 | -                 | Reserved                        | Reserved                                                                                                                                                                                                            | -    |
|   11 | SEM_HTIMEOUT_INT  | SEM Heartbeat Timeout Interrupt | SEM Controllerの Heartbeat信号が Timeoutしたときにセットされる割り込みビットです。SEM Controllerが出力する Heartbeat信号が SEM Heartbeat Timeout Registerで設定するクロック数アサートされなかった時セットされます。 | R/WC |
|   10 | SEM_HALTED_INT    | SEM Halted Interrupt            | SEM Controllerが Fatal Errorにより Haltしたときにセットされる割り込みビットです。SEM Current State Registerの全ての有効ビットがセットされたとき、この割り込みがセットされます。                                     | R/WC |
|    9 | SEM_UNCORRECT_INT | SEM Uncorrectable Interrupt     | SEM Controllerが訂正不能なエラーを検出したときセットされる割り込みビットです。この割り込みがセットされたとき、SEM Controllerは IDLEステートに遷移し コンフィギュレーションメモリの監視を停止します。                | R/WC |
|    8 | SEM_ECORRECT_INT  | SEM Error Correction Interrupt  | SEM Controllerがエラーを訂正したときセットされる割り込みビットです。                                                                                                                                                | R/WC |
|    7 | PLL_UNLOCK_INT    | PLL Unlock Interrupt            | PLLが異常により Unlockしたときセットされる割り込みビットです。                                                                                                                                                      | R/WC |
|  6:5 | -                 | Reserved                        | Reserved                                                                                                                                                                                                            | -    |
|    4 | UCLK2_STOP_INT    | User Clock 2 Stop Interrupt     | User Clock 2が異常により停止したときセットされる割り込みビットです。                                                                                                                                                | R/WC |
|    3 | UCLK1_STOP_INT    | User Clock 1 Stop Interrupt     | User Clock 1が異常により停止したときセットされる割り込みビットです。                                                                                                                                                | R/WC |
|    2 | ULPICLK_STOP_INT  | ULPI Clock Stop Interrupt       | ULPI Clockが異常により停止したときセットされる割り込みビットです。                                                                                                                                                  | R/WC |
|    1 | MAXICLK_STOP_INT  | Main AXI Clock Stop Interrupt   | Main AXI Clockが異常により停止したときセットされる割り込みビットです。                                                                                                                                              | R/WC |
|    0 | SYSCLK_STOP_INT   | System Clock Stop Interrupt     | System Clockが異常により停止したときセットされる割り込みビットです。                                                                                                                                                | R/WC |

*** System Monitor Interrupt Enable Register (Offset 0x0034)
System Monitor Interrupt Enable Registerは、System Monitorが監視するイベントを割り込み出力信号に通知するか設定するためのレジスタです。

#+CAPTION: System Monitor Interrupt Enable Registerビットフィールド
|  bit | Symbol            | Field                                  | Description                                                                           | R/W |
|------+-------------------+----------------------------------------+---------------------------------------------------------------------------------------+-----|
| 31:5 | -                 | Reserved                               | Reserved                                                                              | -   |
|   11 | SEM_HTIMEOUT_ENB  | SEM Heartbeat Timeout Interrupt Enable | SEM_HTIMEOUT_INTイベントが発生した時、割り込み信号を発生させるかどうかを設定します。  | R/W |
|   10 | SEM_HALTED_ENB    | SEM Halted Interrupt Enable            | SEM_HALTED_INTイベントが発生した時、割り込み信号を発生させるかどうかを設定します。    | R/W |
|    9 | SEM_UNCORRECT_ENB | SEM Uncorrectable Interrupt Enable     | SEM_UNCORRECT_INTイベントが発生した時、割り込み信号を発生させるかどうかを設定します。 | R/W |
|    8 | SEM_ECORRECT_ENB  | SEM Error Correction Interrupt Enable  | SEM_ECORRECT_INTイベントが発生した時、割り込み信号を発生させるかどうかを設定します。  | R/W |
|    7 | PLL_UNLOCK_ENB    | PLL Unlock Interrupt Enable            | PLL_UNLOCK_INTイベントが発生した時、割り込み信号を発生させるかどうか設定します。      | R/W |
|  6:5 | -                 | Reserved                               | Reserved                                                                              | -   |
|    4 | UCLK2_STOP_ENB    | User Clock 2 Stop Interrupt Enable     | UCLK2_STOP_INTイベントが発生した時、割り込み信号を発生させるかどうか設定します。      | R/W |
|    3 | UCLK1_STOP_ENB    | User Clock 1 Stop Interrupt Enable     | UCLK1_STOP_INTイベントが発生した時、割り込み信号を発生させるかどうか設定します。      | R/W |
|    2 | ULPICLK_STOP_ENB  | ULPI Clock Stop Interrupt Enable       | ULPICLK_STOP_INTイベントが発生した時、割り込み信号を発生させるかどうかを設定します。  | R/W |
|    1 | MAXICLK_STOP_ENB  | Main AXI Clock Stop Interrupt Enable   | MAXICLK_STOP_INTイベントが発生した時、割り込み信号を発生させるかどうかを設定します。  | R/W |
|    0 | SYSCLK_STOP_ENB   | System Clock Stop Interrupt Enable     | SYSCLK_STOP_INTイベントが発生した時、割り込み信号を発生させるかどうかを設定します。   | R/W |

*** SEM Controller State Register (0ffset 0x0040)
SEM Controller State Registerは SC OBC FPGAに実装する、SEM Controllerのステートを示すレジスタです。

セットされているビットを確認する事により、ソフトウェアは SEM Controllerがどのような状況にあるか把握する事ができます。
また、Currentステートと Previousステートを比較する事によって、ステートの遷移を把握する事ができます。

Currentステート、Previousステートの全てのビットが Highにセットされているとき、SEM Controllerに重大なエラーが起きた事を示します。
また、全てのビットが Lowにクリアされているとき、SEM Controllerは IDLE状態である事を示します。

#+CAPTION: SEM Controller State Registerビットフィールド
|   bit | Symbol            | Field                             | Description                                                                                                                                                                                                              | R/W |
|-------+-------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:21 | -                 | Reserved                          | Reserved                                                                                                                                                                                                                 | -   |
|    20 | SEM_PRE_INJECT    | SEM Previous Injection State      | SEM Controllerの前のステートがエラー挿入ステートだった事を示します。                                                                                                                                                     | RO  |
|    19 | SEM_PRE_CLASSIFIC | SEM Previous Classification State | SEM Controllerの前のステートが分類ステートだった事を示します。                                                                                                                                                           | RO  |
|    18 | SEM_PRE_CORRECT   | SEM Previous Correction State     | SEM Controllerの前のステートが訂正ステートだった事を示します。                                                                                                                                                           | RO  |
|    17 | SEM_PRE_OBSERVE   | SEM Previous Oveservation State   | SEM Controllerの前のステートが監視ステートだった事を示します。                                                                                                                                                           | RO  |
|    16 | SEM_PRE_INIT      | SEM Previous Initilize State      | SEM Controllerの前のステートが初期化ステートだった事を示します。                                                                                                                                                         | RO  |
|  15:5 | -                 | Reserved                          | Reserved                                                                                                                                                                                                                 | -   |
|     4 | SEM_CUR_INJECT    | SEM Current Error Injection State | SEM Controllerがエラー挿入ステートである事を示します。このビットのみが Highにセットされているとき、SEM Controllerはエラー挿入ステートです。                                                                              | RO  |
|     3 | SEM_CUR_CLASSIFIC | SEM Current Classification State  | SEM Controllerが分類ステートである事を示します。このビットのみが Highにセットされているとき、SEM Controllerは分類ステートです。                                                                                          | RO  |
|     2 | SEM_CUR_CORRECT   | SEM Current Correction State      | SEM Controllerが訂正ステートである事を示します。このビットのみが Highにセットされているとき、SEM Controllerは訂正ステートです。                                                                                          | RO  |
|     1 | SEM_CUR_OBSERVE   | SEM Current Oveservation State    | SEM Controllerが監視ステートである事を示します。このビットのみが Highにセットされているとき、SEM Controllerは監視ステートです。                                                                                          | RO  |
|     0 | SEM_CUR_INIT      | SEM Current Initilize State       | SEM Controllerが初期化ステートである事を示します。このビットのみが Highにセットされているとき、SEM Controllerは初期化ステートです。このビットは FPGAが動作を開始した後に 1度だけ発生する初期化の間アクティブになります。 | RO  |

*** SEM Error Correction Count Register (Offset 0x0044)
SEM Error Correction Count Registerは、SEM Controllerが行ったエラー訂正数をカウントします。

#+CAPTION: SEM Error Correction Count Registerビットフィールド
|   bit | Symbol    | Field                | Description                                                                                                                        | R/W  |
|-------+-----------+----------------------+------------------------------------------------------------------------------------------------------------------------------------+------|
| 31:16 | -         | Reserved             | Reserved                                                                                                                           | -    |
|  15:0 | SEMCCOUNT | SEM Correction Count | SEM Controllerが訂正したエラーの数を保持します。このレジスタに書き込みを行うと、書き込む値によらずカウント値が 0にクリアされます。 | R/WC |

*** SEM Heartbeat Timeout Register (Offset 0x0048)
SEM Heartbeat Timeout Registeは SEM Controllerが出力する Heartbeat信号の Timeout時間を設定するレジスタです。
Xilinxの SEM Controller (v4.1)では、Heartbeat信号のアサート間隔は 150クロックと規定されており、本レジスタの値は修正する必要はありません。

#+CAPTION: SEM Heartbeat Timeout Registerビットフィールド
|  bit | Symbol   | Field                   | Description                                                                                                                                                                                                                                   | R/W |
|------+----------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:8 | -        | Reserved                | Reserved                                                                                                                                                                                                                                      | -   |
|  7:0 | HTIMEOUT | Heartbeat Timeout Value | SEM Controllerが出力する Heartbeat信号の受信Timeout時間を設定します。SEM Controllerのステートが、監視ステートのとき このレジスタに設定されるカウント値まで Heartbeat信号がアサートされないとき、SEM Heartbeat Timeout割り込みを発生させます。 | R/W |

*** SEM Error Injection Command Register 1/2 (Offset 0x0050/0x0054)
SEM Error Injection Command Register は、SEM Controller のエラー挿入機能を使用するためのレジスタです。 
このレジスタを使用し、SEM Controllerのエラー挿入インターフェースにコマンドを入力する事により、エラー挿入機能を使用する事ができます。

このレジスタは試験専用レジスタであり、FPGA インプリ時のコンフィギュレーションにより、無効化する事ができます。 

SEM Controller へのコマンド送信は、SEM Error Injection Command Register 2 への書き込みをきっかけに行われます。
そのため、SEM Error Injection Command Register 1 への書き込みは、必ず SEM Error Injection Command Register 2 の書き込み前に行ってください。

#+CAPTION: SEM Error Injection Command Register 1ビットフィールド
|  bit | Symbol   | Field             | Description                                                                                                                                        | R/W |
|------+----------+-------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:0 | EINJECT1 | Error Injection 1 | SEM Controllerのエラー挿入インターフェースにコマンドを入力するためのフィールドです。このフィールドにはエラー挿入コマンドの Bit 31:0 を設定します。 | R/W |

#+CAPTION: SEM Error Injection Command Register 2ビットフィールド
|  bit | Symbol   | Field             | Description                                                                                                                                                                                                                                                           | R/W |
|------+----------+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:8 | -        | Reserved          | Reserved                                                                                                                                                                                                                                                              | -   |
|  7:0 | EINJECT2 | Error Injection 2 | SEM Controllerのエラー挿入インターフェースにコマンドを入力するためのフィールドです。このフィールドにはエラー挿入コマンドの Bit 39:32 を設定します。このフィールドをセットすると SEM Error Injection 1 の設定値と合わせ SEM Controllerにエラーコマンドが送信されます。 | R/W |

*** XADC Register Window (Offset 0x1000-1FFF)
XADC Register Fieldは、SC OBC FPGAに搭載されている Xilinxの ADCモジュールとのアクセスを行うための領域です。

XADCは Xilinx 7シリーズ FPGAに搭載される ADCモジュールです。
XADCには 12 bit、毎秒 1 Mサンプルの ADCとオンチップセンサーが含まれています。
SC OBC FPGAでは、XADCのレジスタを読み出す事により、FPGAのダイの温度と入力電源の監視を行う事ができます。

XADCの詳細は Xilinxのドキュメント (UG480: 7シリーズ FPGAおよび Zynq-7000 All Programmable SoC XADCデュアル 12ビット 1 MPSPS アナログ-デジタルコンバーター ユーザーズガイド)を参照してください。

XADCのレジスタにアクセスするためには、ベースアドレスを 0x4F041000とし Bit 11:4に 対象となるXADCのレジスタアドレスを設定する事で行えます。
Status Registerにアクセスするためのレジスタアドレスを以下に示します。

|    Address | Name               | Description                                                                                                    |
|------------+--------------------+----------------------------------------------------------------------------------------------------------------|
| 0x4F041000 | Temperature Status | オンチップ温度センサーの測定結果が格納されます。Bit 15:4の 12 Bitが温度センサーの伝達関数に対応します。        |
| 0x4F041010 | VCCINT Status      | オンチップVCCINT電圧モニターの測定結果が格納されます。Bit 15:4の 12 Bitが電圧センサーの伝達関数に対応します。  |
| 0x4F041020 | VCCAUX Status      | オンチップVCCAUX電圧モニターの測定結果が格納されます。Bit 15:4の 12 Bitが電圧センサーの伝達関数に対応します。  |
| 0x4F041060 | VCCBRAM Status     | オンチップVCCBRAM電圧モニターの測定結果が格納されます。Bit 15:4の 12 Bitが電圧センサーの伝達関数に対応します。 |
| 0x4F041200 | Max Temperature    | 電源投入または最後に XADCをリセットしてから記録された最大温度測定値が格納されます。                            |
| 0x4F041210 | Max VCCINT         | 電源投入または最後に XADCをリセットしてから記録された最大VCCINT測定値が格納されます。                          |
| 0x4F041220 | Max VCCAUX         | 電源投入または最後に XADCをリセットしてから記録された最大VCCAUX測定値が格納されます。                          |
| 0x4F041230 | Max VCCBRAM        | 電源投入または最後に XADCをリセットしてから記録された最大VCCBRAM測定値が格納されます。                         |
| 0x4F041240 | Min Temperature    | 電源投入または最後に XADCをリセットしてから記録された最小温度測定値が格納されます。                            |
| 0x4F041250 | Min VCCINT         | 電源投入または最後に XADCをリセットしてから記録された最小VCCINT測定値が格納されます。                          |
| 0x4F041260 | Min VCCAUX         | 電源投入または最後に XADCをリセットしてから記録された最小VCCAUX測定値が格納されます。                          |
| 0x4F041270 | Min VCCBRAM        | 電源投入または最後に XADCをリセットしてから記録された最小VCCBRAM測定値が格納されます。                         |

System Monitorの XADC Register Windowからは、XADCのすべてのレジスタ領域にアクセスする事ができますが、アラーム機能は現状実装されておりません。

* General Purpose Timer
General Purpose Timerは、SC OBC FPGAの運用時間の管理や、FPGA内の CPUや IPコアへのタイミング通知を行うためのタイマーモジュールです。
General Purpose Timerは、Global Timer・Software Interrupt Timer・Hardware Interrupt Timerと呼ばれる、3つの32bitアップカウンターで構成されています。

Global Timerは、FPGAのリセット解除から動作する Free Run Timerです。
リセットの解除後からの時刻を数えるために使われます。
Global Timerの最小時間は 0.0625秒であり、最大 268435455.9375秒(約 8年 186日)までカウントする事ができます。

Software Interrupt Timerと Hardware Interrupt Timerは、CPU 及び IPコアに割り込みを発生させるタイマーとして使用する事ができます。
Software Interrupt Timerと Hardware Interrupt Timerの最小時間は Prescalerにより設定する事ができます。

** レジスタ詳細
General Purpose Timerは、Base Address 0x4F05_0000に配置されています。

#+CAPTION: General Purpose Timer メモリマップ
|    Address | Symbol        | Register                                           |    Initial |
|------------+---------------+----------------------------------------------------+------------|
| 0x4F050000 | GPTMR_GTR     | Global Timer Register                              | 0x00000000 |
| 0x4F050004 | GPTMR_TECR    | Timer Enable Control Register                      | 0x00000000 |
| 0x4F050008 | GPTMR_SITRR   | Software Interrupt Timer Remaining Register        | 0x00000000 |
| 0x4F05000C | GPTMR_HITRR   | Hardware Interrupt Timer Remaining Register        | 0x00000000 |
| 0x4F050010 | GPTMR_GTSR    | Global Timer Interrupt Status Register             | 0x00000000 |
| 0x4F050014 | GPTMR_GTER    | Global Timer Interrupt Enable Register             | 0x00000000 |
| 0x4F050020 | GPTMR_GTOCR1  | Global Timer Output Compare Register 1             | 0x00000000 |
| 0x4F050024 | GPTMR_GTOCR2  | Global Timer Output Compare Register 2             | 0x00000000 |
| 0x4F050028 | GPTMR_GTOCR3  | Global Timer Output Compare Register 3             | 0x00000000 |
| 0x4F05002C | GPTMR_GTOCR4  | Global Timer Output Compare Register 4             | 0x00000000 |
| 0x4F050100 | GPTMR_SITCR   | Software Interrupt Timer Control Register          | 0x00000000 |
| 0x4F050104 | GPTMR_SITPR   | Software Interrupt Timer Prescaler Register        | 0x00000000 |
| 0x4F050108 | GPTMR_SITSR   | Software Interrupt Timer Status Register           | 0x00000000 |
| 0x4F05010C | GPTMR_SITER   | Software Interrupt Timer Enable Register           | 0x00000000 |
| 0x4F050110 | GPTMR_SITOCR1 | Software Interrupt Timer Output Compare Register 1 | 0x00000000 |
| 0x4F050114 | GPTMR_SITOCR2 | Software Interrupt Timer Output Compare Register 2 | 0x00000000 |
| 0x4F050118 | GPTMR_SITOCR3 | Software Interrupt Timer Output Compare Register 3 | 0x00000000 |
| 0x4F05011C | GPTMR_SITOCR4 | Software Interrupt Timer Output Compare Register 4 | 0x00000000 |
| 0x4F050120 | GPTMR_SITOCR5 | Software Interrupt Timer Output Compare Register 5 | 0x00000000 |
| 0x4F050124 | GPTMR_SITOCR6 | Software Interrupt Timer Output Compare Register 6 | 0x00000000 |
| 0x4F050128 | GPTMR_SITOCR7 | Software Interrupt Timer Output Compare Register 7 | 0x00000000 |
| 0x4F05012C | GPTMR_SITOCR8 | Software Interrupt Timer Output Compare Register 8 | 0x00000000 |
| 0x4F050200 | GPTMR_HITCR   | Hardware Interrupt Timer Control Register          | 0x00000000 |
| 0x4F050204 | GPTMR_HITPR   | Hardware Interrupt Timer Prescaler Register        | 0x00000000 |
| 0x4F050210 | GPTMR_HITOCR1 | Hardware Interrupt Timer Output Compare Register 1 | 0x00000000 |
| 0x4F050214 | GPTMR_HITOCR2 | Hardware Interrupt Timer Output Compare Register 2 | 0x00000000 |
| 0x4F050218 | GPTMR_HITOCR3 | Hardware Interrupt Timer Output Compare Register 3 | 0x00000000 |
| 0x4F05021C | GPTMR_HITOCR4 | Hardware Interrupt Timer Output Compare Register 4 | 0x00000000 |
| 0x4F050220 | GPTMR_HITOCR5 | Hardware Interrupt Timer Output Compare Register 5 | 0x00000000 |
| 0x4F050224 | GPTMR_HITOCR6 | Hardware Interrupt Timer Output Compare Register 6 | 0x00000000 |
| 0x4F050228 | GPTMR_HITOCR7 | Hardware Interrupt Timer Output Compare Register 7 | 0x00000000 |
| 0x4F05022C | GPTMR_HITOCR8 | Hardware Interrupt Timer Output Compare Register 8 | 0x00000000 |
| 0x4F05F000 | GPTMR_VER     | General Purpose Timer IP Version Register          |          - |

*** Global Timer Register (Offset: 0x0000)
Global Timer Registerは、Global Timerの現在の値を示すレジスタです。

Global Timerは、SC OBC FPGAの起動後に発生するシステムリセットの解除からカウントを開始するカウンターです。
このタイマーの値を読み出す事で起動後の時間を知る事ができます。

Global Timerの動作クロックは、FPGAに入力する原発クロックです。
そのため、システムがどんな状態であってもカウント動作を行います。

Timerの最小時間は、0.0625秒であり、最大 268435455.9375秒(約 8年186日)までカウントする事ができます。

#+CAPTION: Global Timer Register ビットフィールド
|  bit | Symbol        | Field                      | Description                                                                                                                                                                                                                                                                                                     | R/W |
|------+---------------+----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:4 | GPTMR_GTINT   | Global Timer Integer Field | Global Timerの整数部分を示すフィールドです。Bit 4が 2^0秒を示します。そのため、このフィールドは 1秒に 1回インクリメントされます。Bit 4: 2^0(1)秒  Bit 5: 2^1 (2)秒 Bit 6: 2^2 (4)秒 ・・・ Bit 31: 2^27 (134217728)秒 このフィールドは、システムの起動後 ソフトウェアによって書き換える事ができます。           | R/W |
|  3:0 | GPTMR_GTFLOAT | Global Timer Float Field   | Global Timerの小数部分を示すフィールドです。Bit 0が 2^-4秒を示します。そのため、このフィールドは 0.0625秒に 1回インクリメントされます。 Bit 3: 2^-1 (0.5)秒　Bit 2: 2^-2 (0.25)秒 Bit 1: 2^-3 (0.125)秒 Bit 0: 2^-4 (0.0625)秒 このフィールドは、GPTMR_GTINTフィールドに書き込みがあった時 "0"にクリアされます。 | RO  |

*** Timer Enable Control Register (Offset: 0x0004)
Timer Enable Control Registerは、Software Interrupt Timerと Hardware Interrupt Timerの動作を制御するレジスタです。

#+CAPTION: Timer Enable Control Register ビットフィールド
|  bit | Symbol      | Field                           | Description                                                                                                                    | R/W |
|------+-------------+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:2 | -           | Reserved                        | Reserved                                                                                                                       | -   |
|    1 | GPTMR_HITEN | Hardware Interrupt Timer Enable | Hardware Interrupt Timerの動作設定を行います。 0: Hardware Interrupt Timer 無効 (停止) 1: Hardware Interrupt Timer 有効 (動作) | R/W |
|    0 | GPTMR_SITEN | Software Interrupt Timer Enable | Software Interrupt Timerの動作設定を行います。 0: Software Interrupt Timer 無効 (停止) 1: Software Interrupt Timer 有効 (動作) | R/W |

*** Software Interrupt Timer Remaining Register (Offset: 0x0008)
Software Interrupt Timer Remaining Registerは Software Interrupt Timerの現在のカウント値を示すレジスタです。

Software Interrupt Timerの最小時間は、Software Interrupt Timer Prescaler Registerの設定値により決まります。

#+CAPTION: Software Interrupt Timer Remaining Register ビットフィールド
|  bit | Symbol       | Field                          | Description                                            | R/W |
|------+--------------+--------------------------------+--------------------------------------------------------+-----|
| 31:0 | GPTMR_SITCNT | Software Interrupt Timer Count | Software Interrupt Timerの現在のカウント値を示します。 | RO  |

*** Hardware Interrupt Timer Remaining Register (Offset: 0x000C)
Hardware Interrupt Timer Remaining Registerは Hardware Interrupt Timerの現在のカウント値を示すレジスタです。

Hardware Interrupt Timerの最小時間は、Hardware Interrupt Timer Prescaler Registerの設定値により決まります。

#+CAPTION: Hardware Interrupt Timer Remaining Register ビットフィールド
|  bit | Symbol       | Field                          | Description                                            | R/W |
|------+--------------+--------------------------------+--------------------------------------------------------+-----|
| 31:0 | GPTMR_HITCNT | Hardware Interrupt Timer Count | Hardware Interrupt Timerの現在のカウント値を示します。 | RO  |

*** Global Timer Interrupt Status Register (Offset: 0x0010)
Global Timer Interrupt Status Registerは、Global Timerの割り込みステータスを示すレジスタです。

Global Timerに起因する割り込みが発生した時、割り込み要因に対応するビットがセットされます。
それぞれのビットは "1"をセットすると、割り込みをクリアする事ができます。

#+CAPTION: Global Timer Interrupt Status Register ビットフィールド
|   bit | Symbol          | Field                                      | Description                                                                                                                                                                           | R/W  |
|-------+-----------------+--------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------|
| 31:17 | -               | Reserved                                   | Reserved                                                                                                                                                                              | -    |
|    16 | GPTMR_GTROVSTS  | Global Timer Rollover Flag                 | Global Timerの Roll Overが発生した事を示すビットです。Global Timerがカウンター動作によって 0xFFFFFFFFから 0x0に戻ったとき "1"にセットされます。                                       | R/WC |
|  15:4 | -               | Reserved                                   | Reserved                                                                                                                                                                              | -    |
|     3 | GPTMR_GTOCF4STS | Global Timer Output Compare Channel 4 Flag | Global Timer出力比較チャネル 4の比較イベントが発生した事を示すビットです。Global Timerのカウンター値と Global Timer Output Compare Register 4の値が一致したとき "1"にセットされます。 | R/WC |
|     2 | GPTMR_GTOCF3STS | Global Timer Output Compare Channel 3 Flag | Global Timer出力比較チャネル 3の比較イベントが発生した事を示すビットです。Global Timerのカウンター値と Global Timer Output Compare Register 3の値が一致したとき "1"にセットされます。 | R/WC |
|     1 | GPTMR_GTOCF2STS | Global Timer Output Compare Channel 2 Flag | Global Timer出力比較チャネル 2の比較イベントが発生した事を示すビットです。Global Timerのカウンター値と Global Timer Output Compare Register 2の値が一致したとき "1"にセットされます。 | R/WC |
|     0 | GPTMR_GTOCF1STS | Global Timer Output Compare Channel 1 Flag | Global Timer出力比較チャネル 1の比較イベントが発生した事を示すビットです。Global Timerのカウンター値と Global Timer Output Compare Register 1の値が一致したとき "1"にセットされます。 | R/WC |

*** Global Timer Interrupt Enable Register (Offset: 0x0014)
Global Timer Interrupt Enable Registerは、Global Timerの動作において発生した割り込みイベントを割り込み出力信号に通知するか設定するためのレジスタです。

このレジスタで "1"にセットされた割り込みイネーブルビットと、Global Timer Interrupt Status Registerの対応する割り込みステータスビットが "1"にセットされた時、Global Timer割り込みを出力します。

#+CAPTION: Global Timer Interrupt Enable Register ビットフィールド
|   bit | Symbol          | Field                                             | Description                                                                         | R/W |
|-------+-----------------+---------------------------------------------------+-------------------------------------------------------------------------------------+-----|
| 31:17 | -               | Reserved                                          | Reserved                                                                            | -   |
|    16 | GPTMR_GTROVENB  | Global Timer Rollover Flag Enable                 | GPTMR_GTROVSTSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。  | R/W |
|  15:4 | -               | Reserved                                          | Reserved                                                                            | -   |
|     3 | GPTMR_GTOCF4ENB | Global Timer Output Compare Channel 4 Flag Enable | GPTMR_GTOCF4STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |
|     2 | GPTMR_GTOCF3ENB | Global Timer Output Compare Channel 3 Flag Enable | GPTMR_GTOCF3STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |
|     1 | GPTMR_GTOCF2ENB | Global Timer Output Compare Channel 2 Flag Enable | GPTMR_GTOCF2STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |
|     0 | GPTMR_GTOCF1ENB | Global Timer Output Compare Channel 1 Flag Enable | GPTMR_GTOCF1STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |

*** Global Timer Output Compare Register 1-4 (Offset: 0x0020-0x002C)
Global Timer Output Compare Register 1-4は、Global Timerのタイマー出力値に対する比較イベントを生成するための設定レジスタです。

Global Timerは、出力比較を行うチャネルを 4つ持っています。
Global Timerのカウント値と、本レジスタの設定値が一致したときに、対応するチャネルの比較イベントを生成します。
このレジスタの値が "0"に設定されている場合、そのチャネルの出力比較機能は無効になります。

#+CAPTION: Global Timer Output Compare Register 1 ビットフィールド (Offset: 0x0020)
|  bit | Symbol        | Field                                       | Description                                                                       | R/W |
|------+---------------+---------------------------------------------+-----------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_GTCOMP1 | Global Timer Output Compare Channel 1 Value | 出力比較チャネル 1の比較イベントを生成する Global Timerのカウント値を設定します。 | R/W |

#+CAPTION: Global Timer Output Compare Register 2 ビットフィールド (Offset: 0x0024)
|  bit | Symbol        | Field                                       | Description                                                                       | R/W |
|------+---------------+---------------------------------------------+-----------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_GTCOMP2 | Global Timer Output Compare Channel 2 Value | 出力比較チャネル 2の比較イベントを生成する Global Timerのカウント値を設定します。 | R/W |

#+CAPTION: Global Timer Output Compare Register 3 ビットフィールド (Offset: 0x0028)
|  bit | Symbol        | Field                                       | Description                                                                       | R/W |
|------+---------------+---------------------------------------------+-----------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_GTCOMP3 | Global Timer Output Compare Channel 3 Value | 出力比較チャネル 3の比較イベントを生成する Global Timerのカウント値を設定します。 | R/W |

#+CAPTION: Global Timer Output Compare Register 4 ビットフィールド (Offset: 0x002C)
|  bit | Symbol        | Field                                       | Description                                                                       | R/W |
|------+---------------+---------------------------------------------+-----------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_GTCOMP4 | Global Timer Output Compare Channel 4 Value | 出力比較チャネル 4の比較イベントを生成する Global Timerのカウント値を設定します。 | R/W |

*** Software Interrupt Timer Control Register (Offset: 0x0100)
Software Interrupt Timer Control Registerは、Software Interrupt Timerの制御方法を指定するレジスタです。

このレジスタは、Timer Enable Control Registerの GPTMR_SITENビットをセットする前に設定する必要があります。

#+CAPTION: Software Interrupt Timer Control Register ビットフィールド
|  bit | Symbol         | Field                                       | Description| R/W |
||
| 31:5 | -              | Reserved                                    | Reserved| -   |
|    4 | GPTMR_SITSWR   | Software Interrupt Timer Software Reset     | Software Interrupt Timerのソフトウェアリセットを行うためのビットです。このビットに"1"を書き込むと、Software Interrupt Timerに関連する以下レジスタのリセットを行います。 - Software Interrupt Timer Remaining Register(GPTMR_SITRR) - Software Interrupt Timer Control Register(GPTMR_SITCR) - Software Interrupt Timer Prescaler Register(GPTMR_SITPR) - Software Interrupt Timer Status Register(GPTMR_SITSR) - Software Interrupt Timer Enable Register(GPTMR_SITER) - Software Interrupt Timer Output Compare Register 1-8(GPTMR_SITOCR1-8) リセットが完了すると、このビットは"0"に戻ります。 | R/W |
|  3:2 | -              | Reserved                                    | Reserved| -   |
|    1 | GPTMR_SITRUNMD | Software Interrupt Timer Run Mode Select    | 出力比較チャネル 1で比較イベントが発生した時の Software Interrupt Timerの動作モードを設定します。0: Restartモード 1: Free Runモード Restartモードは、出力比較チャネル 1で比較イベントが発生した時、Software Interrupt Timerのカウント値を "0"にリセットするモードです。Software Interrupt Timerは 0に戻った後、カウント動作を再開します。Free Runモードは、出力比較チャネル 1で比較イベントが発生した時、Software Interrupt Timerのカウント値をクリアせずカウントを続けるモードです。Software Interrupt Timerが 0xFFFFFFFFになると、Roll Overしカウンターは 0に戻ります。                        | R/W |
|    0 | GPTMR_SITENBMD | Software Interrupt Timer Enable Mode Select | Timer Enable Control Registerの GPTMR_SITENビットがセットされた時の Software Interrupt Timerの値を設定します。0: 前回のカウント値からカウントを再開 1: カウント値を 0にクリアしカウントを開始                                                                                                                                                                                                                                                                                                                                                                                                    | R/W |
*** Software Interrupt Timer Prescaler Register (Offset: 0x0104)
Software Interrupt Timer Prescaler Registerは、Software Interrupt TimerのPrescalerを設定するためのレジスタです。

Software Interrupt Timerは、24 MHzのクロックで動作します。
このレジスタには、Software Interrupt Timerをカウントアップするための、クロックサイクル数を設定します。

このレジスタは、Timer Enable Control Registerの GPTMR_SITENビットをセットする前に設定する必要があります。

#+CAPTION: Software Interrupt Timer Prescaler Register ビットフィールド
|   bit | Symbol       | Field                             | Description                                                                                    | R/W |
|-------+--------------+-----------------------------------+------------------------------------------------------------------------------------------------+-----|
| 31:16 | -            | Reserved                          | Reserved                                                                                       | -   |
|  15:0 | GPTMR_SITPSC | Software Interrupt Timer Prescale | Software Interrupt Timerをカウントアップするための動作クロックに対するサイクル数を設定します。 | R/W |

GPTMR_SITPSCに設定する値は、Software Interrupt Timerの動作クロック周波数 (24 MHz)とカウンターのカウントアップ間隔から、以下の計算で算出することができます。

#+BEGIN_QUOTE
$GPTMR\_SITPSC = 24 \times 10^6 \times Software\ Interrupt\ Timer\ Countup\ Interval[s] -1$
#+END_QUOTE

*** Software Interrupt Timer Status Register (Offset: 0x0108)
Software Interrupt Timer Status Registerは、Software Interrupt Timerの割り込みステータスを示すレジスタです。

Software Interrupt Timerに起因する割り込みが発生した時、割り込み要因に対応するビットがセットされます。
それぞれのビットは "1"をセットすると、割り込みをクリアする事ができます。

#+CAPTION: Software Interrupt Timer Status Register ビットフィールド
|   bit | Symbol           | Field                                                  | Description                                                                                                                                                                                                                | R/W  |
|-------+------------------+--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------|
| 31:17 | -                | Reserved                                               | Reserved                                                                                                                                                                                                                   | -    |
|    16 | GPTMR_SITROVSTS  | Software Interrupt Timer Rollover Flag                 | Software Interrupt TimerのRoll Overが発生した事を示すビットです。Software Interrupt Timerがカウンター動作によって 0xFFFFFFFFから 0x0に戻ったときに本ビットが"1"にセットされます。                                          | R/WC |
|  15:8 | -                | Reserved                                               | Reserved                                                                                                                                                                                                                   | -    |
|     7 | GPTMR_SITOCF8STS | Software Interrupt Timer Output Compare Channel 8 Flag | Software Interrupt Timer出力比較チャネル8の比較イベントが発生した事を示すビットです。Software Interrupt Timerのカウンター値と Software Interrupt Timer Output Compare Register 8の値が一致したときに "1"にセットされます。 | R/WC |
|     6 | GPTMR_SITOCF7STS | Software Interrupt Timer Output Compare Channel 7 Flag | Software Interrupt Timer出力比較チャネル7の比較イベントが発生した事を示すビットです。Software Interrupt Timerのカウンター値と Software Interrupt Timer Output Compare Register 7の値が一致したときに "1"にセットされます。 | R/WC |
|     5 | GPTMR_SITOCF6STS | Software Interrupt Timer Output Compare Channel 6 Flag | Software Interrupt Timer出力比較チャネル6の比較イベントが発生した事を示すビットです。Software Interrupt Timerのカウンター値と Software Interrupt Timer Output Compare Register 6の値が一致したときに "1"にセットされます。 | R/WC |
|     4 | GPTMR_SITOCF5STS | Software Interrupt Timer Output Compare Channel 5 Flag | Software Interrupt Timer出力比較チャネル5の比較イベントが発生した事を示すビットです。Software Interrupt Timerのカウンター値と Software Interrupt Timer Output Compare Register 5の値が一致したときに "1"にセットされます。 | R/WC |
|     3 | GPTMR_SITOCF4STS | Software Interrupt Timer Output Compare Channel 4 Flag | Software Interrupt Timer出力比較チャネル4の比較イベントが発生した事を示すビットです。Software Interrupt Timerのカウンター値と Software Interrupt Timer Output Compare Register 4の値が一致したときに "1"にセットされます。 | R/WC |
|     2 | GPTMR_SITOCF3STS | Software Interrupt Timer Output Compare Channel 3 Flag | Software Interrupt Timer出力比較チャネル3の比較イベントが発生した事を示すビットです。Software Interrupt Timerのカウンター値と Software Interrupt Timer Output Compare Register 3の値が一致したときに "1"にセットされます。 | R/WC |
|     1 | GPTMR_SITOCF2STS | Software Interrupt Timer Output Compare Channel 2 Flag | Software Interrupt Timer出力比較チャネル2の比較イベントが発生した事を示すビットです。Software Interrupt Timerのカウンター値と Software Interrupt Timer Output Compare Register 2の値が一致したときに "1"にセットされます。 | R/WC |
|     0 | GPTMR_SITOCF1STS | Software Interrupt Timer Output Compare Channel 1 Flag | Software Interrupt Timer出力比較チャネル1の比較イベントが発生した事を示すビットです。Software Interrupt Timerのカウンター値と Software Interrupt Timer Output Compare Register 1の値が一致したときに "1"にセットされます。 | R/WC |

*** Software Interrupt Timer Enable Register (Offset: 0x010C)
Software Interrupt Timer Enable Registerは、Software Interrupt Timerの動作において発生した割り込みイベントを割り込み出力信号に通知するか設定するためのレジスタです。

このレジスタで "1"にセットされた割り込みイネーブルビットと、Software Interrupt Timer Status Registerの対応する割り込みステータスビットが "1"にセットされた時、Software Interrupt Timerの割り込みを出力します。

#+CAPTION: Software Interrupt Timer Enable Register ビットフィールド
|   bit | Symbol           | Field                                                         | Description                                                                          | R/W |
|-------+------------------+---------------------------------------------------------------+--------------------------------------------------------------------------------------+-----|
| 31:17 | -                | Reserved                                                      | Reserved                                                                             | -   |
|    16 | GPTMR_SITROVENB  | Software Interrupt Timer Rollover Flag Enable                 | GPTMR_SITROVSTSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。  | R/W |
|  15:8 | -                | Reserved                                                      | Reserved                                                                             | -   |
|     7 | GPTMR_SITOCF8ENB | Software Interrupt Timer Output Compare Channel 8 Flag Enable | GPTMR_SITOCF8STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |
|     6 | GPTMR_SITOCF7ENB | Software Interrupt Timer Output Compare Channel 7 Flag Enable | GPTMR_SITOCF7STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |
|     5 | GPTMR_SITOCF6ENB | Software Interrupt Timer Output Compare Channel 6 Flag Enable | GPTMR_SITOCF6STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |
|     4 | GPTMR_SITOCF5ENB | Software Interrupt Timer Output Compare Channel 5 Flag Enable | GPTMR_SITOCF5STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |
|     3 | GPTMR_SITOCF4ENB | Software Interrupt Timer Output Compare Channel 4 Flag Enable | GPTMR_SITOCF4STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |
|     2 | GPTMR_SITOCF3ENB | Software Interrupt Timer Output Compare Channel 3 Flag Enable | GPTMR_SITOCF3STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |
|     1 | GPTMR_SITOCF2ENB | Software Interrupt Timer Output Compare Channel 2 Flag Enable | GPTMR_SITOCF2STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |
|     0 | GPTMR_SITOCF1ENB | Software Interrupt Timer Output Compare Channel 1 Flag Enable | GPTMR_SITOCF1STSイベントが発生した時に、割り込み信号を出力するかどうかを設定します。 | R/W |

*** Software Interrupt Timer Output Compare Register 1-8 (Offset: 0x0110-0x012C)
Software Interrupt Timer Output Compare Register 1-8は、Software Interrupt Timerのタイマー出力値に対する比較イベントを生成するための設定レジスタです。

Software Interrupt Timerは、出力比較を行うチャネルは 8つ持っています。
Software Interrupt Timerのカウント値と、本レジスタの設定値が一致したとき、対応するチャネルの比較イベントを生成します。
レジスタの値が "0"に設定されている場合、そのチャネルの出力比較機能は無効になります。

#+CAPTION: Software Interrupt Timer Output Compare Register 1 ビットフィールド (Offset: 0x0110)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_SITCOMP1 | Software Interrupt Timer Output Compare Channel 1 Value | 出力比較チャネル 1の比較イベントを生成する Software Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Software Interrupt Timer Output Compare Register 2 ビットフィールド (Offset: 0x0114)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_SITCOMP2 | Software Interrupt Timer Output Compare Channel 2 Value | 出力比較チャネル 2の比較イベントを生成する Software Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Software Interrupt Timer Output Compare Register 3 ビットフィールド (Offset: 0x0118)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_SITCOMP3 | Software Interrupt Timer Output Compare Channel 3 Value | 出力比較チャネル 3の比較イベントを生成する Software Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Software Interrupt Timer Output Compare Register 4 ビットフィールド (Offset: 0x011C)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_SITCOMP4 | Software Interrupt Timer Output Compare Channel 4 Value | 出力比較チャネル 4の比較イベントを生成する Software Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Software Interrupt Timer Output Compare Register 5 ビットフィールド (Offset: 0x0120)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_SITCOMP5 | Software Interrupt Timer Output Compare Channel 5 Value | 出力比較チャネル 5の比較イベントを生成する Software Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Software Interrupt Timer Output Compare Register 6 ビットフィールド (Offset: 0x0124)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_SITCOMP6 | Software Interrupt Timer Output Compare Channel 6 Value | 出力比較チャネル 6の比較イベントを生成する Software Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Software Interrupt Timer Output Compare Register 7 ビットフィールド (Offset: 0x0128)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_SITCOMP7 | Software Interrupt Timer Output Compare Channel 7 Value | 出力比較チャネル 7の比較イベントを生成する Software Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Software Interrupt Timer Output Compare Register 8 ビットフィールド (Offset: 0x012C)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_SITCOMP8 | Software Interrupt Timer Output Compare Channel 8 Value | 出力比較チャネル 8の比較イベントを生成する Software Interrupt Timerのカウント値を設定します。 | R/W |

*** Hardware Interrupt Timer Control Register (Offset: 0x0200)
Hardware Interrupt Timer Control Registerは、Hardware Interrupt Timerの制御方法を指定するレジスタです。

このレジスタは、Timer Enable Control Registerの GPTMR_HITENビットをセットする前に設定する必要があります。

#+CAPTION: Hardware Interrupt Timer Control Register ビットフィールド
|   bit | Symbol         | Field                                                                   | Description| R/W |
|-------+----------------+-------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:30 | GPTMR_HITOPMD8 | Hardware Interrupt Timer Output Compare Channel 8 Operation Mode Select | 出力比較チャネル 8で比較イベントが発生した時の Hardware Interrupt信号の動作モードを定義するフィールドです。接続相手の IPコア仕様に合わせ設定する必要があります。0b00: 割り込みを無効にします。 0b01: トグル形式で割り込みを出力します。 0b10: パルス形式の割り込みを出力します。 0b11: ハンドシェイク形式の割り込みを出力します。                                                                                                                                                                                                                                         | R/W |
| 29:28 | GPTMR_HITOPMD7 | Hardware Interrupt Timer Output Compare Channel 7 Operation Mode Select | 出力比較チャネル 7で比較イベントが発生した時の Hardware Interrupt信号の動作モードを定義するフィールドです。接続相手の IPコア仕様に合わせ設定する必要があります。0b00: 割り込みを無効にします。 0b01: トグル形式で割り込みを出力します。 0b10: パルス形式の割り込みを出力します。 0b11: ハンドシェイク形式の割り込みを出力します。                                                                                                                                                                                                                                         | R/W |
| 27:26 | GPTMR_HITOPMD6 | Hardware Interrupt Timer Output Compare Channel 6 Operation Mode Select | 出力比較チャネル 6で比較イベントが発生した時の Hardware Interrupt信号の動作モードを定義するフィールドです。接続相手の IPコア仕様に合わせ設定する必要があります。0b00: 割り込みを無効にします。 0b01: トグル形式で割り込みを出力します。 0b10: パルス形式の割り込みを出力します。 0b11: ハンドシェイク形式の割り込みを出力します。                                                                                                                                                                                                                                         | R/W |
| 25:24 | GPTMR_HITOPMD5 | Hardware Interrupt Timer Output Compare Channel 5 Operation Mode Select | 出力比較チャネル 5で比較イベントが発生した時の Hardware Interrupt信号の動作モードを定義するフィールドです。接続相手の IPコア仕様に合わせ設定する必要があります。0b00: 割り込みを無効にします。 0b01: トグル形式で割り込みを出力します。 0b10: パルス形式の割り込みを出力します。 0b11: ハンドシェイク形式の割り込みを出力します。                                                                                                                                                                                                                                         | R/W |
| 23:22 | GPTMR_HITOPMD4 | Hardware Interrupt Timer Output Compare Channel 4 Operation Mode Select | 出力比較チャネル 4で比較イベントが発生した時の Hardware Interrupt信号の動作モードを定義するフィールドです。接続相手の IPコア仕様に合わせ設定する必要があります。0b00: 割り込みを無効にします。 0b01: トグル形式で割り込みを出力します。 0b10: パルス形式の割り込みを出力します。 0b11: ハンドシェイク形式の割り込みを出力します。                                                                                                                                                                                                                                         | R/W |
| 21:20 | GPTMR_HITOPMD3 | Hardware Interrupt Timer Output Compare Channel 3 Operation Mode Select | 出力比較チャネル 3で比較イベントが発生した時の Hardware Interrupt信号の動作モードを定義するフィールドです。接続相手の IPコア仕様に合わせ設定する必要があります。0b00: 割り込みを無効にします。 0b01: トグル形式で割り込みを出力します。 0b10: パルス形式の割り込みを出力します。 0b11: ハンドシェイク形式の割り込みを出力します。                                                                                                                                                                                                                                         | R/W |
| 19:18 | GPTMR_HITOPMD2 | Hardware Interrupt Timer Output Compare Channel 2 Operation Mode Select | 出力比較チャネル 2で比較イベントが発生した時の Hardware Interrupt信号の動作モードを定義するフィールドです。接続相手の IPコア仕様に合わせ設定する必要があります。0b00: 割り込みを無効にします。 0b01: トグル形式で割り込みを出力します。 0b10: パルス形式の割り込みを出力します。 0b11: ハンドシェイク形式の割り込みを出力します。                                                                                                                                                                                                                                         | R/W |
| 17:16 | GPTMR_HITOPMD1 | Hardware Interrupt Timer Output Compare Channel 1 Operation Mode Select | 出力比較チャネル 1で比較イベントが発生した時の Hardware Interrupt信号の動作モードを定義するフィールドです。接続相手の IPコア仕様に合わせ設定する必要があります。0b00: 割り込みを無効にします。 0b01: トグル形式で割り込みを出力します。 0b10: パルス形式の割り込みを出力します。 0b11: ハンドシェイク形式の割り込みを出力します。                                                                                                                                                                                                                                         | R/W |
|  15:5 | -              | Reserved                                                                | Reserved| -   |
|     4 | GPTMR_HITSWR   | Hardware Interrupt Timer Hardware Reset                                 | Hardware Interrupt Timerのソフトウェアリセットを行うためのビットです。このビットに "1"を書き込むと、Hardware Interrupt Timerに関連する以下のレジスタのリセットを行います。 - Hardware Interrupt Timer Remaining Register(GPTMR_HITRR) - Hardware Interrupt Timer Control Register(GPTMR_HITCR) - Hardware Interrupt Timer Prescaler Register(GPTMR_HITPR) - Hardware Interrupt Timer Output Compare Register 1-8(GPTMR_HITOCR1-8) リセットが完了すると、このビットは "0"に戻ります。                                                                                      | R/W |
|   3:2 | -              | Reserved                                                                | Reserved| -   |
|     1 | GPTMR_HITRUNMD | Hardware Interrupt Timer Run Mode Select                                | 出力比較チャネル 1で比較イベントが発生した時の Hardware Interrupt Timerの動作モードを設定します。0: Restartモード 1: Free Runモード Restartモードは、出力比較チャネル 1で比較イベントが発生した時、Hardware Interrupt Timerのカウント値を "0"にリセットするモードです。Hardware Interrupt Timerは 0に戻った後、カウント動作を再開します。Free Runモードは、出力比較チャネル 1で比較イベントが発生した時、Hardware Interrupt Timerのカウント値をクリアせずカウントを続けるモードです。Hardware Interrupt Timerが 0xFFFFFFFFになると、Roll Overしカウンターは 0に戻ります。 | R/W |
|     0 | GPTMR_HITENBMD | Hardware Interrupt Timer Enable Mode Select                             | Timer Enable Control Registerの GPTMR_HITENビットがセットされた時の Hardware Interrupt Timerの値を設定します。 0: 前回のカウント値からカウントを再開 1: 値を 0にクリアしカウントを開始                                                                                                                                                                                                                                                                                                                                                                                    | R/W |

*** Hardware Interrupt Timer Prescaler Register (Offset: 0x0204)
Hardware Interrupt Timer Prescaler Registerは、Hardware Interrupt Timerの Prescalerを設定するためのレジスタです。

Hardware Interrupt Timerは、24 MHzのクロックで動作します。
このレジスタには、Hardware Interrupt Timerをカウントアップするための、クロックサイクル数を設定します。

このレジスタは、Timer Enable Control Registerの GPTMR_HITENビットをセットする前に設定する必要があります。

#+CAPTION: Hardware Interrupt Timer Prescaler Register ビットフィールド
|   bit | Symbol       | Field                             | Description                                                                                    | R/W |
|-------+--------------+-----------------------------------+------------------------------------------------------------------------------------------------+-----|
| 31:16 | -            | Reserved                          | Reserved                                                                                       | -   |
|  15:0 | GPTMR_HITPSC | Hardware Interrupt Timer Prescale | Hardware Interrupt Timerがカウントアップするための動作クロックに対するサイクル数を設定します。 | R/W |

GPTMR_HITPSCに設定する値は、Hardware Interrupt Timerの動作クロック周波数 (24 MHz)とカウンターのカウントアップ間隔から、以下の計算で算出することができます。

#+BEGIN_QUOTE
$GPTMR\_HITPSC = 24 \times 10^6 \times Hardware\ Interrupt\ Timer\ Countup\ Interval[s] -1$
#+END_QUOTE

*** Hardware Interrupt Timer Output Compare Register 1-8 (Offset: 0x0210-0x022C)
Hardware Interrupt Timer Output Compare Register 1-8は、Hardware Interrupt Timerのタイマー出力値に対する比較イベントを生成するための設定レジスタです。

Hardware Interrupt Timerは、出力比較を行うチャネルを 8つ持っています。
Hardware Interrupt Timerのカウント値と、本レジスタの設定値が一致したとき、対応するチャネルの比較イベントを生成します。
このレジスタの値が "0"に設定されている場合、そのチャネルの出力比較機能は無効になります。

#+CAPTION: Hardware Interrupt Timer Output Compare Register 1 ビットフィールド (Offset: 0x0210)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_HITCOMP1 | Hardware Interrupt Timer Output Compare Channel 1 Value | 出力比較チャネル 1の比較イベントを生成する Hardware Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Hardware Interrupt Timer Output Compare Register 2 ビットフィールド (Offset: 0x0214)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_HITCOMP2 | Hardware Interrupt Timer Output Compare Channel 2 Value | 出力比較チャネル 2の比較イベントを生成する Hardware Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Hardware Interrupt Timer Output Compare Register 3 ビットフィールド (Offset: 0x0218)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_HITCOMP3 | Hardware Interrupt Timer Output Compare Channel 3 Value | 出力比較チャネル 3の比較イベントを生成する Hardware Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Hardware Interrupt Timer Output Compare Register 4 ビットフィールド (Offset: 0x021C)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_HITCOMP4 | Hardware Interrupt Timer Output Compare Channel 4 Value | 出力比較チャネル 4の比較イベントを生成する Hardware Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Hardware Interrupt Timer Output Compare Register 5 ビットフィールド (Offset: 0x0220)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_HITCOMP5 | Hardware Interrupt Timer Output Compare Channel 5 Value | 出力比較チャネル 5の比較イベントを生成する Hardware Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Hardware Interrupt Timer Output Compare Register 6 ビットフィールド (Offset: 0x0224)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_HITCOMP6 | Hardware Interrupt Timer Output Compare Channel 6 Value | 出力比較チャネル 6の比較イベントを生成する Hardware Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Hardware Interrupt Timer Output Compare Register 7 ビットフィールド (Offset: 0x0228)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_HITCOMP7 | Hardware Interrupt Timer Output Compare Channel 7 Value | 出力比較チャネル 7の比較イベントを生成する Hardware Interrupt Timerのカウント値を設定します。 | R/W |

#+CAPTION: Hardware Interrupt Timer Output Compare Register 8 ビットフィールド (Offset: 0x022C)
|  bit | Symbol         | Field                                                   | Description                                                                                   | R/W |
|------+----------------+---------------------------------------------------------+-----------------------------------------------------------------------------------------------+-----|
| 31:0 | GPTMR_HITCOMP8 | Hardware Interrupt Timer Output Compare Channel 8 Value | 出力比較チャネル 8の比較イベントを生成する Hardware Interrupt Timerのカウント値を設定します。 | R/W |

*** General Purpose Timer IP Version Register (Offset: 0xF000)
General Purpose Timer IP Version Registerは、General Purpose Timerの IPコアバージョンを示すレジスタです。

#+CAPTION: General Purpose Timer IP Version Register ビットフィールド
|   bit | Symbol       | Field                                  | Description                                          | R/W |
|-------+--------------+----------------------------------------+------------------------------------------------------+-----|
| 31:24 | GPTMR_MAJVER | General Purpose Timer IP Major Version | General Purpose TimerコアのMajor Versionを示します。 | RO  |
| 23:16 | GPTMR_MINVER | General Purpose Timer IP Minor Version | General Purpose TimerコアのMinor Versionを示します。 | RO  |
|  15:0 | GPTMR_PATVER | General Purpose Timer IP Patch Version | General Purpose TimerコアのPatch Versionを示します。 | RO  |

* HRMEM (High-reliability Memory)
HRMEM (High-reliability Memory)は、SC-OBC-A1に実装される SRAMにアクセスを行うメモリコントローラモジュールです。

HRMEMのメモリ空間は、Address 0x00000000をベースとする 4 MByteの領域に配置されており、CPU SubSystemの CPU Local Busを通じアクセスされます。
また、Main AXI Bus Systemに接続されるAXIバスからアクセスが可能なミラーアドレスが、Base Address 0x60000000に配置されています。

HRMEMは SC OBC FPGAのシステムにおいて、CPUが使用するメインメモリとして動作します。
そのため、SC OBC FPGAに実装する CPUが効率的に動作できるよう、SRAMへのアクセスを最適化する機能が実装されています。

HRMEMは SRAMからのデータ読み出し時に 1 bit ECCエラーの発生を検出すると、エラーを修復する機能を持っています。
また、メモリスクラビング機能を持ち、SRAMの全領域のデータに対し定期的なエラーチェックとエラーの修復を行います。

** レジスタ詳細
HRMEMはデータを格納する Address 0x00000000からの 4 MByte空間とは別に、HRMEMを制御するために使用するレジスタが配置されています。
HRMEMのレジスタは、Base Address 0x40500000に配置されています。

#+CAPTION: HRMEM Register アドレスマップ
| Offset | Symbol              | Register                                    |    Initial |
|--------+---------------------+---------------------------------------------+------------|
| 0x0000 | HRMEM_ECCCOLENR     | ECC Error Collect Enable Register           | 0x00000001 |
| 0x0008 | HRMEM_MEMSCRCTRLR   | Memory Scrubing Control Register            | 0x06FF0001 |
| 0x0010 | HRMEM_INTSTR        | HRMEM Interrupt Status Register             | 0x00000000 |
| 0x0014 | HRMEM_INTENR        | HRMEM Interrupt Enable Register             | 0x00000000 |
| 0x0020 | HRMEM_ECC1ERRCNTR   | 1Bit ECC Error Count Register               | 0x00000000 |
| 0x0028 | HRMEM_ECDISCNTR     | ECC Correct Data Discard Count Register     | 0x00000000 |
| 0x002C | HRMEM_ERRCNTCLRR    | Error Count Clear Register                  | 0x00000000 |
| 0x0030 | HRMEM_ECCERRADMR    | ECC Error Address Monitor Register          | 0x00000000 |
| 0x0070 | HRMEM_PFEMDCTLR     | Prefetch Mode Control Register              | 0x00000001 |
| 0x0074 | HRMEM_SPEPFENR      | Special Prefetch Enable Register            | 0x00000000 |
| 0x0080 | HRMEM_SPEPFADRSETR1 | Special Prefetch Address Setting Register 1 | 0x00000000 |
| 0x0084 | HRMEM_SPEPFADRSETR2 | Special Prefetch Address Setting Register 2 | 0x00000000 |
| 0xF000 | HRMEM_VER           | HRMEM IP Version Register                   |          - |

*** ECC Error Collect Enable Register (Offset: 0x0000)
ECC Error Collect Enable Registerは、1bit ECCエラー検出時にメモリの修復のため訂正データの書き戻す機能を設定するためのレジスタです。
このレジスタのEnableにすると、訂正データの書き戻し機能が有効になります。

#+CAPTION: ECC Error Collect Enable Register ビットフィールド
|  bit | Symbol   | Field                    | Description                                                                      | R/W |
|------+----------+--------------------------+----------------------------------------------------------------------------------+-----|
| 31:1 | -        | Reserved                 | Reserved                                                                         | -   |
|    0 | ECCCOLEN | ECC Error Collect Enable | メモリ修復機能のEnable設定を行います。0: メモリ修復機能 OFF 1: メモリ修復機能 ON | R/W |

*** Memory Scrubing Control Register (Offset: 0x0008)
Memory Scrubing Control Registerは、メモリスクラビング機能の設定を行うためのレジスタです。
このレジスタのMemory Scrubing EnableをONにすると、SRAMの全フィールドの定期的な読み出し行い書き込まれたデータのチェックを行います。

メモリスクラビング機能は、SRAMの全領域のデータに対し定期的なエラーチェックを行う機能です。
メモリスクラビング機能により検出したデータのエラーを修復する場合には、メモリ修復機能 (ECC Error Collect Enable Registerの ECCCOLENビット)も有効にする必要があります。

#+CAPTION: Memory Scrubing Control Register ビットフィールド
|   bit | Symbol      | Field                              | Description                                                                                                                                                                                                                                                                                                                       | R/W |
|-------+-------------+------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | MEMSCRCYC   | Memory Scrubing Cycle              | メモリスクラビングによる読み出しアクセスのWait Cycleを設定するビットです。0: 設定禁止 1: 1 Clock間隔 (default) 2: 2 Clock間隔 ... 65535: 65535 Clock間隔 初期状態では、1791 Cycle間隔に設定されています。                                                                                                                         | R/W |
|  15:9 | -           | Reserved                           | Reserved                                                                                                                                                                                                                                                                                                                          | -   |
|     8 | COLFSRDSTPB | Memory Scrubing Arbitration Enable | エラー修復データ FIFOが Full状態での メモリスクラビング制御方法を設定するビットです。本ビットが 0の時、エラー修復データ FIFOが Fullになるとメモリスクラビング機能を停止します。また、本ビットが 1の時、エラー修復データ FIFOが Fullになってもメモリスクラビング機能が停止しません。新しく検出したエラーの修復データは破棄します。 | R/W |
|   7:1 | -           | Reserved                           | Reserved                                                                                                                                                                                                                                                                                                                          | -   |
|     0 | MEMSCRBEN   | Memory Scrubing Enable             | メモリスクラビング機能の Enable設定を行います。0: メモリスクラビング機能 OFF 1: メモリスクラビング機能 ON                                                                                                                                                                                                                         | R/W |

*** HRMEM Interrupt Status Register (Offset: 0x0010)
HRMEM Interrupt Status Registerは、HRMEMの割り込みステータスレジスタです。
それぞれのビットは"1"をセットすると、割り込みをクリアする事ができます。

#+CAPTION: HRMEM Interrupt Status Register ビットフィールド
|   bit | Symbol     | Field                                  | Description                                                                                                                                                                                               | R/W  |
|-------+------------+----------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------|
| 31:18 | -          | Reserved                               | Reserved                                                                                                                                                                                                  | -    |
|    17 | ATRDE1ERR  | Auto Read Access 1bit ECC Error        | メモリスクラビング機能により SRAMの読み出しアクセスが行われた時に、1 bit ECC Errorを検出すると本ビットが"1"にセットされます。E1ERRINTビットの割り込みクリアを行うことで、本ビットの状態もクリアされます。 | RO   |
|    16 | BUSRDE1ERR | AHB/AXI Bus Read Access 1bit ECC Error | AHB/AXI Busからのリードアクセスが行われた時に、1 bit ECC Errorを検出すると本ビットが"1"にセットされます。E1ERRINTビットの割り込みクリアを行うことで、本ビットの状態もクリアされます。                     | RO   |
|  15:9 | -          | Reserved                               | Reserved                                                                                                                                                                                                  | -    |
|     8 | ECDISINT   | ECC Correct Data Discard               | 1 bit ECCエラー検出時、エラー修復データを破棄すると本ビットが "1"にセットされます。                                                                                                                       | R/WC |
|   7:1 | -          | Reserved                               | Reserved                                                                                                                                                                                                  | -    |
|     0 | E1ERRINT   | 1bit ECC Error                         | 1 bit ECC Errorを検出すると本ビットが"1"にセットされます。                                                                                                                                                | R/WC |

*** HRMEM Interrupt Enable Register (Offset: 0x0014)
HRMEM Interrupt Enable Registerは、HRMEMの動作において発生した割り込みイベントを割り込み出力信号に通知するか設定するためのレジスタです。

#+CAPTION: HRMEM Interrupt Enable Register ビットフィールド
|  bit | Symbol      | Field                           | Description                                                                  | R/W |
|------+-------------+---------------------------------+------------------------------------------------------------------------------+-----|
| 31:9 | -           | Reserved                        | Reserved                                                                     | -   |
|    8 | ECDISINTENB | ECC Correct Data Discard Enable | ECDISINTイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
|  7:1 | -           | Reserved                        | Reserved                                                                     | R/W |
|    0 | E1ERRINTENB | 1bit ECC Error Enable           | E1ERRINTイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |

*** 1Bit ECC Error Count Register (Offset: 0x0020)
1Bit ECC Error Count Registerは、1Bit ECCエラー検出回数を示すレジスタです。
1 Bit ECCエラーを検出するたびに該当するカウンターをインクリメントします。

カウンターが上限である 0xFFFFに達すると停止します。
このカウンターのクリアは、Error Count Clear Registerによって行います。

#+CAPTION: 1Bit ECC Error Count Register ビットフィールド
|   bit | Symbol        | Field                                          | Description                                                                                                                   | R/W |
|-------+---------------+------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | ATRDE1ERRCNT  | Auto Read Access 1bit ECC Error Counter        | メモリスクラビング機能による 読み出しアクセスが行われた時に検出した 1 bit ECCエラーの検出回数を読み出すためのフィールドです。 | RO  |
|  15:0 | BUSRDE1ERRCNT | AHB/AXI Bus Read Access 1bit ECC Error Counter | AHB/AXI Busよりリードアクセスが行われた時に検出した 1 bit ECCエラーの検出回数を読み出すためのフィールドです。                 | RO  |

*** ECC Correct Data Discard Count Register (Offset: 0x0028)
ECC Correct Data Discard Count Registerは、エラー修復データの破棄回数を表示するカウンターレジスタです。
エラー修復データを破棄するたびに、本カウンターをインクリメントします。

カウンターが上限である 0xFFFFに達すると停止します。
このカウンターのクリアは、Error Count Clear Registerによって行います。

#+CAPTION: ECC Correct Data Discard Count Register ビットフィールド
|   bit | Symbol   | Field                            | Description                                                    | R/W |
|-------+----------+----------------------------------+----------------------------------------------------------------+-----|
| 31:16 | -        | Reserved                         | Reserved                                                       | -   |
|  15:0 | ECDISCNT | ECC Correct Data Discard Counter | エラー修復データを破棄した回数を読み出すためのフィールドです。 | RO  |

*** Error Count Clear Register (Offset: 0x002C)
Error Count Clear Registerは、1 Bit ECC Errorカウンター、ECC Correct Data Discardカウンターをクリアするためのレジスタです。

#+CAPTION: Error Count Clear Register ビットフィールド
|  bit | Symbol  | Field             | Description                                                                                                                                                                                                                                              | R/W |
|------+---------+-------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:1 | -       | Reserved          | Reserved                                                                                                                                                                                                                                                 | -   |
|    0 | ECNTCLR | Error Count Clear | 1 Bit ECC Errorカウンター、ECC Correct Data Discardカウンターをクリアするためのビットです。本ビットを 1にセットすると、1 Bit ECC Errorカウンター、ECC Correct Data Discardカウンターをクリアする事ができます。本ビットの 0の書き込みは何も影響しません。 | WO  |

*** ECC Error Address Monitor Register (Offset: 0x0030)
ECC Error Address Monitor Registerは、ECC Errorを検出したアドレスを表示するためのレジスタです。

最後にECC Errorを検出したSRAMのアドレスが表示されます。
AHB/AXI Busからのリードアクセスが バス幅の 32 bitに対し Unalignedだった場合でも、32 bit境界のアドレスが表示されます。
また、AXI Busからの読み出しにおいて、ECC Errorを検出した場合、ミラーアドレスである 0x60xxxxxxではなく、メモリの実アドレスである 0x00xxxxxxのアドレスで表示されます。

#+CAPTION: ECC Error Address Monitor Register ビットフィールド
|   bit | Symbol    | Field             | Description                                  | R/W |
|-------+-----------+-------------------+----------------------------------------------+-----|
| 31:22 | -         | Reserved          | Reserved                                     | -   |
|  21:0 | ECCERRADR | ECC Error Address | 1Bit ECC Errorを検出したアドレスを示します。 | RO  |

*** Prefetch Mode Control Register (Offset: 0x0070)
Prefetch Mode Control Registerは、Prefetch機能を設定するためのレジスタです。

Prefetch機能が有効の場合は、PFMDCTLビットの設定により Prefetchの対象として設定されている要因のリードアクセスが発生すると SRAMから Prefetch Bufferにデータを先読みします。
Prefetch Bufferへのデータの先読みは、リードアクセスが発生したアドレスから 8 word境界までのデータを格納します。
Prefetchされたアドレス範囲に Prefetchの対象として設定されているリードアクセスがあった場合 SRAMへのデータアクセスは行わず Prefetch Bufferに格納されたデータを返す事でメモリアクセスのパフォーマンスを向上します。

#+CAPTION: Prefetch Mode Control Register ビットフィールド
|  bit | Symbol  | Field                 | Description                                                                                                                                                                  | R/W |
|------+---------+-----------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:2 | -       | Reserved              | Reserved                                                                                                                                                                     | -   |
|  1:0 | PFMDCTL | Prefetch Mode Control | Prefetch機能を設定します。 bit[0]: Instruction fetchにおける Prefetch機能の有効/無効設定. bit[1]: Dataアクセスにおける Prefetch機能の有効/無効設定. 1: 設定有効. 0: 設定無効 | R/W |

*** Special Prefetch Enable Register (Offset: 0x0074)
Special Prefetch Enable Registerは、特定のアドレスに対する Prefetch機能を設定するためのレジスタです。

Special Prefetch Enableビットの設定により、特定のアドレスの Prefetch機能が有効になっている場合、Prefetchの対象として設定されている要因のリードアクセスにより読み出されるアドレスが、Special Prefetch Address Setting Registerに設定されている ベースアドレスと一致した場合、そのアクセスを Prefetch対象と判定します。
Prefetch対象のアクセスが発生した場合、アクセスの発生したアドレスから 8 word境界までのデータを SRAMから Prefetch Bufferに先読みします。
Prefetchされたアドレス範囲にリードアクセスがあった場合 SRAMへのデータアクセスは行わず Prefetch Bufferに格納されたデータを返す事でメモリアクセスのパフォーマンスを向上します。

Special Pregetch Bufferに格納されたデータは、他のアドレスの リードアクセスにより更新される事は無く、指定されたアドレスの Prefetchデータを保持し続ける事ができます。
特定アドレスに対する Prefetch機能は 2つのベースアドレスを設定する事ができます。

CPUから頻繁に読み出されるアドレスがある場合、この機能を使用するとパフォーマンスを向上させる事ができます。
Prefetch Bufferに格納されているデータに書き込みを行うと、Prefetch Bufferのデータはフラッシュされてしまうため、書き込みが多く発生するアドレスに この機能を使用しても効果は少なくなってしまいます。

尚、Prefetch Mode Control Registerの PFMDCTLフィールドが 2'b00に設定されている場合、本レジスタの設定は無効となります。

#+CAPTION: Special Prefetch Enable Register ビットフィールド
|  bit | Symbol  | Field                   | Description                                                                                                                                                                 | R/W |
|------+---------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:2 | -       | Reserved                | Reserved                                                                                                                                                                    | -   |
|  1:0 | SPPFENB | Special Prefetch Enable | 専用アドレスのPrefetch機能を設定します。 2b00: Special Prefetch未使用  2b01: Special Prefetch1のみ使用  2b10: Special Prefetch2のみ使用   2b11: Special Prefetch1/2双方使用 | R/W |

*** Special Prefetch Address Setting Register 1 (Offset: 0x0080)
Special Prefetch Address Setting Register 1は、Special Prefetch Buffer 1に Prefetchするアドレスを設定するためのレジスタです。

Special Prefetch Enable Registerの SPPFENB[0]ビットが 1に設定されている場合、本レジスタの設定が有効となります。

#+CAPTION: Special Prefetch Address Setting Register 1 ビットフィールド
|   bit | Symbol   | Field                      | Description                                                                  | R/W |
|-------+----------+----------------------------+------------------------------------------------------------------------------+-----|
| 31:22 | -        | Reserved                   | Reserved                                                                     | -   |
|  21:5 | SPPFADR1 | Special Prefetch Address 1 | Special Prefetch Buffer 1に Prefetchするデータのベースアドレスを設定します。 | R/W |
|   4:0 | -        | Reserved                   | Reserved                                                                     | -   |

*** Special Prefetch Address Setting Register 2 (Offset: 0x0084)
Special Prefetch Address Setting Register 2は、Special Prefetch Buffer 2に Prefetchするアドレスを設定するためのレジスタです。

Special Prefetch Enable Registerの SPPFENB[1]ビットが 1に設定されている場合、本レジスタの設定が有効となります。

#+CAPTION: Special Prefetch Address Setting Register 2 ビットフィールド
|   bit | Symbol   | Field                      | Description                                                                | R/W |
|-------+----------+----------------------------+----------------------------------------------------------------------------+-----|
| 31:22 | -        | Reserved                   | Reserved                                                                   | -   |
|  21:5 | SPPFADR2 | Special Prefetch Address 2 | Special Prefetch Buffer2にPrefetchするデータのベースアドレスを設定します。 | R/W |
|   4:0 | -        | Reserved                   | Reserved                                                                   | -   |

*** HRMEM IP Version Register (Offset: 0xF000)
HRMEM IP Version Registerは、HRMEM IPコアのバージョン管理レジスタです。

#+CAPTION: HRMEM IP Version Register ビットフィールド
|   bit | Symbol      | Field                  | Description                          | R/W |
|-------+-------------+------------------------+--------------------------------------+-----|
| 31:24 | HRMEMMAJVER | HRMEM IP Major Version | HRMEMコアのMajor Versionを示します。 | RO  |
| 23:16 | HRMEMMINVER | HRMEM IP Minor Version | HRMEMコアのMinor Versionを示します。 | RO  |
|  15:0 | HRMEMPATVER | HRMEM IP Patch Version | HRMEMコアのPatch Versionを示します。 | RO  |

* QSPI Controller
QSPI Controllerは、SC OBCモジュールに搭載するメモリとSPIプロトコルによる通信を行うためのモジュールです。
QSPI Controllerは、Single SPIモード, Dual SPIモード, Quad SPIモードに対応しており、メモリとの高速な通信を行う事ができます。

SC OBCモジュールには、FPGA Configurationデータを格納するためのNOR Flashメモリと、運用データを格納するための NOR Flashメモリ 及び FeRAMが搭載されています。
これらのメモリとの通信を行う場合には、QSPI Controllerを使用します。

SC OBCモジュールに実装される メモリの型番は以下の通りです。
各メモリの仕様については、ベンダーからリリースされている Datasheetを参照してください。

| Memory                                     | Vendor               | Part Number |
|--------------------------------------------+----------------------+-------------|
| Configurationデータ格納用 NOR Flash Memory | infineon (旧Cypress) | S25FL256L   |
| データ格納用 NOR Flash Memory              | infineon (旧Cypress) | S25FL256L   |
| データ格納用 FeRAM                         | infineon (旧Cypress) | CY15B104QSN |

** レジスタ詳細
QSPI Controllerは、各メモリにアクセスするため 3個搭載されています。
各コアは以下のアドレスに配置されています。

#+CAPTION: QSPI Controller アドレスの割り当て
| Target                                      | Base Address |
|---------------------------------------------+--------------|
| Configuration Memory Access QSPI Controller | 0x4000_0000  |
| Data Memory Access QSPI Controller          | 0x4010_0000  |
| FeRAM Access QSPI Controller                | 0x4020_0000  |

QSPI Controllerには以下のレジスタが実装されています。

#+CAPTION: QSPI Controller Register メモリマップ
| Offset | Symbol      | Register                                  |    Initial |
|--------+-------------+-------------------------------------------+------------|
| 0x0000 | QSPI_ACR    | QSPI Access Control Register              | 0x00000000 |
| 0x0004 | QSPI_TDR    | QSPI TX Data Register                     | 0x00000000 |
| 0x0008 | QSPI_RDR    | QSPI RX Data Register                     | 0x00000000 |
| 0x000C | QSPI_ASR    | QSPI Access Status Register               | 0x00000000 |
| 0x0010 | QSPI_FIFOSR | QSPI FIFO Status Register                 | 0x00000000 |
| 0x0014 | QSPI_FIFORR | QSPI FIFO Reset Register                  | 0x00000000 |
| 0x0020 | QSPI_ISR    | QSPI Interrupt Status Register            | 0x00000000 |
| 0x0024 | QSPI_IER    | QSPI Interrupt Enable Register            | 0x00000000 |
| 0x0030 | QSPI_CCR    | QSPI Clock Control Register               | 0x00000000 |
| 0x0034 | QSPI_DCMSR  | QSPI Data Capture Mode Setting Register   | 0x00000000 |
| 0x0038 | QSPI_FTLSR  | QSPI FIFO Threshold Level Setting Register | 0x00000000 |
| 0xF000 | QSPI_VER    | QSPI Controller IP Version Register       |          - |

*** QSPI Access Control Register (Offset 0x0000)
QSPI Access Control Registerは、SPIアクセスにおける SS信号、I/Oモードを制御するためのレジスタです。

#+CAPTION: QSPI Access Control Register ビットフィールド
|   bit | Symbol    | Field          | Description                                                                                                                                   | R/W |
|-------+-----------+----------------+-----------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:18 | -         | Reserved       | Reserved                                                                                                                                      | -   |
| 17:16 | SPIIOMODE | SPI I/O Mode   | SPIアクセスにおけるI/Oモードを設定します。 2b00: Standard(Single)-IO SPIモード 2b01: Dual-IO SPIモード 2b10: Quad-IO SPIモード 2b11: 設定禁止 | R/W |
|  15:1 | -         | Reserved       | Reserved                                                                                                                                      | -   |
|     0 | SPISSCTL  | SPI SS Control | デバイスへの SS(Chip Select)信号を制御するためのビットです。 0: SS信号をインアクティブ状態に設定します 1: SS信号をアクティブ状態に設定します  | R/W |

*** QSPI TX Data Register (Offset 0x0004)
QSPI TX Data Registerは、SPIデバイスにデータを送信するためのレジスタです。

SPIデバイスへのデータ送信は TX FIFOを介し行います。

SPIデバイスにデータを送信する場合、QSPI TX Data Registerの SPITXDATAフィールドに書き込みを行います。
このレジスタにデータを書き込むと、書き込みデータは TX FIFOに格納されます。
TX FIFOは送信データを最大16 Byte格納できます。
TX FIFOに格納されたデータは、書き込まれた順番ですぐに SPIデバイスに送信されます。

SPIデバイスが要求するダミーサイクルは、このレジスタに書き込みを行うことによって、SPIクロックを出力させ生成します。

#+CAPTION: QSPI TX Data Register ビットフィールド
|  bit | Symbol    | Field       | Description                                                                                                                          | R/W |
|------+-----------+-------------+--------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:8 | -         | Reserved    | Reserved                                                                                                                             | -   |
|  7:0 | SPITXDATA | SPI Tx Data | TX FIFOに格納する送信データを書き込みます。このレジスタに書き込んだデータはTX FIFOに格納され、書き込まれた順番ですぐに送信されます。 | WO  |

*** QSPI RX Data Register (Offset 0x0008)
QSPI RX Data Registerは、SPIデバイスからのデータ受信制御と、RX FIFOからの受信データの読み出しを行うためのレジスタです。

SPIデバイスからのデータ受信は RX FIFOを介して行います。

SPIデバイスからデータを受信する場合、QSPI RX Data Registerの SPIRXDATAフィールドに書き込みアクセスを行います。
このレジスタに書き込む値は何も影響しません。
SPIRXDATAビットの書き込みが行われると、SPIデバイスに対し SPIクロックが送信され、SPIデバイスはそのクロックに同期しデータを出力します。
SPIデバイスの出力データは、RX FIFOに格納されます。
RX FIFOは 最大 16 Byteのデータを格納する事ができます。

RX FIFOに格納されたデータを読み出す場合、QSPI RX Data Registerの SPIRXDATAフィールドに読み出しアクセスを行います。
データは SPIデバイスから出力された順に読み出されます。

QSPI Data Capture Mode Setting Registerの DTCAPTビットが"1" にセットされている時、SPIRXDATAフィールドの書き込み時だけではなく、QSPI TX Data Registerの書き込み時も、RX FIFOにデータが格納されます。
この時 RX FIFOに格納されているデータは SPITXDATAに書き込んだデータ (SPIに出力されているデータ)となります。

#+CAPTION: QSPI RX Data Register ビットフィールド
|  bit | Symbol    | Field       | Description                                                                                                                                                          | R/W |
|------+-----------+-------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:8 | -         | Reserved    | Reserved                                                                                                                                                             | -   |
|  7:0 | SPIRXDATA | SPI Rx Data | このレジスタへの書き込み時は、SPIクロックを送信しデバイスからのデータ受信を行います。このレジスタの読み出し時は、RX FIFOに格納されたデータが古い順に読み出されます。 | R/W |

*** QSPI Access Status Register (Offset 0x000C)
QSPI Access Status Registerは、QSPI Controllerの実行ステータスを確認するためのレジスタです。

QSPI Controllerは、QSPI TX Data Regsiterへの書き込み、QSPI Rx Data Registerへの書き込み、QSPI Access Control Registerの SPI SS Controlレジスタの書き込み時に Busy状態となり、SPIが未使用状態になると Idle状態に戻ります。

#+CAPTION: QSPI Access Status Register ビットフィールド
|  bit | Symbol  | Field           | Description                                                           | R/W |
|------+---------+-----------------+-----------------------------------------------------------------------+-----|
| 31:1 | -       | Reserved        | Reserved                                                              | -   |
|    0 | SPIBUSY | SPI Status Busy | QSPI Controllerの実行ステータスを表示します。 0: Idle状態 1: Busy状態 | RO  |

*** QSPI FIFO Status Register (Offset 0x0010)
QSPI FIFO Status Registerは、TX FIFO/RX FIFOの状態を示すレジスタです。

#+CAPTION: QSPI FIFO Status Register ビットフィールド
|   bit | Symbol    | Field            | Description                                           | R/W |
|-------+-----------+------------------+-------------------------------------------------------+-----|
| 31:21 | -         | Reserved         | Reserved                                              | -   |
| 20:16 | TXFIFOCAP | TX FIFO Capacity | TX FIFOに格納されているデータ量を示すフィールドです。 | RO  |
|  15:5 | -         | Reserved         | Reserved                                              | -   |
|   4:0 | RXFIFOCAP | RX FIFO Capacity | RX FIFOに格納されているデータ量を示すフィールドです。 | RO  |

*** QSPI FIFO Reset Register (Offset 0x0014)
QSPI FIFO Reset Registerは、TX FIFO/RX FIFOのリセット制御(データ消去)を行うためのレジスタです。
何らかの理由によりFIFOのクリアを行いたい場合にこのレジスタを使用します。

#+CAPTION: QSPI FIFO Reset Register ビットフィールド
|   bit | Symbol    | Field         | Description                                                          | R/W |
|-------+-----------+---------------+----------------------------------------------------------------------+-----|
| 31:17 | -         | Reserved      | Reserved                                                             | -   |
|    16 | TXFIFORST | TX FIFO Reset | 本ビットに1をセットすると、TX FIFOがクリアされデータが消去されます。 | WO  |
|  15:1 | -         | Reserved      | Reserved                                                             | -   |
|     0 | RXFIFORST | RX FIFO Reset | 本ビットに1をセットすると、RX FIFOがクリアされデータが消去されます。 | WO  |

*** QSPI Interrupt Status Register (Offset: 0x0020)
QSPI Interrupt Status Registerは、QSPI Controllerの割り込みステータスレジスタです。
全ての割り込みビットは ”1"をセットするとクリアする事ができます。

#+CAPTION: QSPI Interrupt Status Register ビットフィールド
|   bit | Symbol    | Field                   | Description                                                                                                                                                                                                            | R/W  |
|-------+-----------+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------|
| 31:27 | -         | Reserved                | Reserved                                                                                                                                                                                                               | -    |
|    26 | TXFIFOUTH | TX FIFO Under Threshold | TX FIFOに格納されたデータが設定した閾値を下回った事を示すビットです。TX FIFOに格納されるデータ量が QSPI FIFO Threshold Level Setting Registerの TXFIFOUTHLフィールドよりも少なくなった場合に本ビットがセットされます。 | R/WC |
|    25 | TXFIFOOVF | TX FIFO Overflow        | TX FIFOの Overflowが発生したことを示すビットです。TX FIFOが Fullの状態で QSPI TX Data Registerに書き込みを行うと本ビットがセットされます。                                                                             | R/WC |
|    24 | TXFIFOUDF | TX FIFO Underflow       | TX FIFOの Underflowが発生したことを示すビットです。この割り込みは通常の状態で発生する事はありません。この割り込みが発生した場合は、本モジュールをリセットしてください。                                                | R/WC |
| 23:19 | -         | Reserved                | Reserved                                                                                                                                                                                                               | -    |
|    18 | RXFIFOOTH | RX FIFO Over Threshold  | RX FIFOに格納されたデータが設定した閾値を上回った事を示すビットです。RX FIFOに格納されるデータ量が QSPI FIFO Threshold Level Setting Registerの RXFIFOOTHLフィールドよりも多くなった場合に本ビットがセットされます。   | R/WC |
|    17 | RXFIFOOVF | RX FIFO Overflow        | RX FIFOの Overflowが発生したことを示すビットです。RX FIFOが Fullの状態でデータ受信を行うと本ビットがセットされます。                                                                                                   | R/WC |
|    16 | RXFIFOUDF | RX FIFO Underflow       | RX FIFOの Underflowが発生したことを示すビットです。RX FIFOが Emptyの状態で QSPI RX Data Registerの読み出しを行うと本ビットがセットされます。                                                                           | R/WC |
|  15:1 | -         | Reserved                | Reserved                                                                                                                                                                                                               | -    |
|     0 | SPICTRLDN | SPI Control Done        | SPI制御が完了した事を示すビットです。QSPI Controllerの実行ステータス(QSPI Access Status Register: SPI Status Busyビット)が BusyからIdleに変化した時、本ビットが 1にセットされます。                                    | R/WC |

*** QSPI Interrupt Enable Register (Offset: 0x0024)
QSPI Interrupt Enable Registerは、QSPI Controllerの割り込みイベントを割り込み信号に通知する設定を行うためのレジスタです。

#+CAPTION: QSPI Interrupt Enable Register ビットフィールド
|   bit | Symbol       | Field                          | Description                                                                   | R/W |
|-------+--------------+--------------------------------+-------------------------------------------------------------------------------+-----|
| 31:27 | -            | Reserved                       | Reserved                                                                      | -   |
|    26 | TXFIFOUTHEMB | TX FIFO Under Threshold Enable | TXFIFOUTHイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
|    25 | TXFIFOOVFEMB | TX FIFO Overflow Enable        | TXFIFOOVFイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
|    24 | TXFIFOUDFEMB | TX FIFO Underflow Enable       | TXFIFOUDFイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
| 23:19 | -            | Reserved                       | Reserved                                                                      | -   |
|    18 | RXFIFOOTHEMB | RX FIFO Over Threshold Enable  | RXFIFOOTHイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
|    17 | RXFIFOOVFEMB | RX FIFO Overflow Enable        | RXFIFOOVFイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
|    16 | RXFIFOUDFEMB | RX FIFO Underflow Enable       | RXFIFOUDFイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
|  15:1 | -            | Reserved                       | Reserved                                                                      | -   |
|     0 | SPIBUSYDNEMB | SPI Status Busy Done Enable    | SPIBUSYDNイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |

*** QSPI Clock Control Register (Offset 0x0030)
QSPI Clock Control Registerは、SPIクロックの周波数、極性、位相設定を制御するためのレジスタです。

#+CAPTION: QSPI Clock Control Register ビットフィールド
|   bit | Symbol | Field              | Description                                                                                                                                                  | R/W |
|-------+--------+--------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:21 | -      | Reserved           | Reserved                                                                                                                                                     | -   |
|    20 | SCKPOL | SPI Clock Polarity | SPIクロックのクロック極性(CPOL)を設定します。0: Idle時のクロックを Low Levelとする 1: Idle時のクロックを High Levelとする                                    | R/W |
| 19:17 | -      | Reserved           | Reserved                                                                                                                                                     | -   |
|    16 | SCKPHA | SPI Clock Phase    | SPIクロックのクロック位相(CPHA)を設定します。0: Data sampling: Rise Edge / Data Shift: Fall Edge 1: Data sampling: Fall Edge / Data Shift: Rise Edge         | R/W |
| 15:12 | -      | Reserved           | Reserved                                                                                                                                                     | -   |
|  11:0 | SCKDIV | SPI Clock Divide   | システムクロックに対するSPIクロックの分周数を設定します。本フィールドに0(最小値)をセットした場合、SPI Clockはシステムクロックを2分周した周波数で動作します。 | R/W |

SPIクロックの周波数(fSCLK)は、システムクロック(fSYS)と SCKDIVの設定により以下のように計算されます。
#+BEGIN_QUOTE
$fSCLK[MHz] = \frac{fSYS[MHz]}{2(SCKDIV+1)}$
#+END_QUOTE

*** QSPI Data Capture Mode Setting Register (Offset 0x0034)
QSPI Data Capture Mode Setting Registerは、RX FIFOにデータを取り込む条件を設定するためのレジスタです。
このレジスタをセットすることで、QSPI RX Data Registerへの書き込みアクセスを行った時だけではなく、QSPI TX Data Registerへの書き込みを行った時もデータの取り込みを行う事ができます。
これにより SPIデバイスへの「送信フェーズ」「ダミーフェーズ」を含めた全てのフェーズのデータを取り込むことができます。

#+CAPTION: QSPI Data Capture Mode Setting Register ビットフィールド
|  bit | Symbol | Field        | Description                                                                                                                                         | R/W |
|------+--------+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:1 | -      | Reserved     | Reserved                                                                                                                                            | -   |
|    0 | DTCAPT | Data Capture | RX FIFOにデータを取り込む条件を設定します。0: QSPI RX Data Registerの書き込み時のみ 1: QSPI TX Data Registerと QSPI RX Data Registerの両方の書き込み時 | R/W |

*** QSPI FIFO Threshold Level Setting Register (Offset 0x0038)
QSPI FIFO Threshold Level Setting Registerは、TX FIFO/RX FIFOのデータ量に応じた割り込み出力を行うための設定レジスタです。

#+CAPTION: QSPI FIFO Threshold Level Setting Register ビットフィールド
|   bit | Symbol     | Field                         | Description                                                                                                                                                                         | R/W |
|-------+------------+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:21 | -          | Reserved                      | Reserved                                                                                                                                                                            | -   |
| 20:16 | TXFIFOUTHL | TX FIFO Under Threshold Level | TXFIFOUTH割り込みを発生させる TX FIFOのデータ格納量の閾値を設定するためのフィールドです。本フィールドに 0または最大値を設定した場合 TXFIFOUTHは無効となり、割り込みは発生しません。 | R/W |
|  15:5 | -          | Reserved                      | Reserved                                                                                                                                                                            | -   |
|   4:0 | RXFIFOOTHL | RX FIFO Over Threshold Level  | RXFIFOOTH割り込みを発生させる RX FIFOのデータ格納料の閾値を設定するためのフィールドです。本フィールドに 0または最大値を設定した場合 RXFIFOOTHは無効となり、割り込みは発生しません。 | R/W |

*** QSPI Controller IP Version Register (Offset: 0xF000)
QSPI Controller IPコアバージョンの管理レジスタです。

#+CAPTION: QSPI Controller IP Version Register ビットフィールド
|   bit | Symbol | Field                            | Description                              | R/W |
|-------+--------+----------------------------------+------------------------------------------+-----|
| 31:24 | MAJVER | QSPI Controller IP Major Version | QSPI ControllerコアのMajor Versionです。 | RO  |
| 23:16 | MINVER | QSPI Controller IP Minor Version | QSPI ControllerコアのMinor Versionです。 | RO  |
|  15:0 | PATVER | QSPI Controller IP Patch Version | QSPI ControllerコアのPatch Versionです。 | RO  |

** QSPIアクセス手順
この章では、Infineon製Flash Memory 「S25FL256L」を例に、QSPI Controllerによる Flashメモリの書き込み, 読み出しを行うための手順を説明します。

*** データ書き込み操作手順例
本章では、Quad Page ProgramコマンドによるFlash Memoryへのデータ書き込みの手順を説明します。
CPOL=0、CPHA=0に設定した時のSPI Interface波形と手順を以下に示します。

#+CAPTION: Quad Page Program アクセス波形
#+ATTR_HTML: :width 600
[[file:./images/quad_page_program_acc_seq.png]]

A: QSPI Access Control Registerを設定します。
SPI I/O Modeは Standard(Single)-IO SPIモード、SPI SS Controlは"1"とするため、0x00000001を書き込みます。
書き込み後、SPI_CS信号がアクティブ状態(Low level)に変化します。

B: QSPI TX Data Registerに 1 ByteのInstruction(Quad Page Program: 0x32)と 3 Byteの Addressを書き込みます。
QSPI TX Data Registerに書き込まれたデータからSPIデバイスに順次送信されます。

C: Bで書き込んだ全てのデータの送信完了後に、QSPI Access Control Registerに0x00020001を書き込み、SPI I/O ModeをQuad-IO SPIモードに変更します。

D: Flash MemoryへのWriteデータをQSPI TX Data Registerに書き込み、データ送信を行います。TX FIFOは送信するデータを最大16Byteまで格納することができます。
TX FIFOの容量を超えるサイズのデータを送信する場合は、TX FIFOが OverflowしないようQSPI TX Data Registerへの書き込み間隔を調整する必要があります。
TX_FIFOのデータ格納量のステータスは、QSPI FIFO Status RegisterやTX_FIFO関連の割り込み要因により確認することができます。

E: Dで書き込んだ全てのデータの送信完了後に、QSPI Access Control Registerに0x0000_0000を書き込みSPI_CS信号をインアクティブ状態(High level)に変化させ、SPIアクセスを終了します。

CからD時の遷移を除いた全てのフェーズの切り替わりには、QSPI Controllerの実行ステータスを確認し、必ずIdle状態となってから次の操作を実行する必要があります。
実行ステータスの確認方法は以下の2通りがあります。
- QSPI Access Status Registerの監視
- SPICTRLDN割り込みの検出
QSPI Controllerの実行ステータスがBusyの状態で次の操作が実行された場合、SPIアクセスは不適切なフォーマットで転送される可能性があります。

*** データ読み出し操作手順例
本章では、Quad I/O ReadコマンドによるFlash Memoryからのデータ読み出しの手順を説明します。
CPOL=0、CPHA=0に設定した時のSPI Interfaceの波形と手順を以下に示します。

#+CAPTION: Quad I/O Read アクセス波形
#+ATTR_HTML: :width 650
[[file:./images/quad_io_read_acc_seq.png]]

A: QSPI Access Control Registerを設定します。
SPI I/O ModeはStandard(Single)-IO SPIモード、SPI SS Controlは1とするため、0x00000001を書き込みます。
書き込み後、SPI_CS信号がアクティブ状態(Low level)に変化します。

B: QSPI TX Data Registerに 1 ByteのInstruction(Quad I/O Read:0xEB)を書き込みます。

C: Bで書き込んだデータの送信完了後に、QSPI Access Control Registerに0x00020001を書き込み、SPI I/O ModeをQuad-IO SPIモードに変更します。

D: QSPI TX Data Registerに 3 ByteのAddress、1 ByteのMode、4 Byte分のダミーデータを 1 Byte単位で書き込みます。TX FIFOに格納します。
QSPI TX Data Registerに書き込まれたデータからSPIデバイスに順次送信されます。

E: QSPI RX Data Registerに書き込みを行いFlash MemoryからのReadデータをRX FIFOに格納します。
受信データはQSPI RX Data Registerを読み出すことにより受信順に取得されます。
RX FIFOは受信したデータを最大16Byteまで格納できます。
RX FIFOの容量を超えるサイズのデータを受信する場合は、RX FIFOが OverflowしないようQSPI TX Data Registerの書き込みと読み出しの順序を考慮する必要があります。
RX_FIFOのデータ格納量のステータスは、QSPI FIFO Status RegisterやRX_FIFO関連の割り込み要因により確認することができます。

F: Eで受信した全てのデータ読み出しの完了後に、QSPI Access Control Registerに0x00000000を書き込みSPI_CS信号をインアクティブ状態(High level)に変化させ、SPIアクセスを終了します。

Data Write Operation時と同様、CからD時を除いた全てのフェーズの切り替わり時には、QSPI Controllerの実行ステータスを確認し、必ずIdle状態となってから次の操作を実行する必要があります。

* AHB UART Lite
AHU UART Liteは、UART通信を行うためのモジュールです。
このモジュールはソフトウェア開発時のコンソール出力を目的としているため、フロー制御を行う機能などは持っていません。

** レジスタ詳細
AHB UART Liteは、Base Address 0x4F010000に配置されています。

#+CAPTION: AHB UART Lite Registerメモリマップ
|     Offset | Symbol        | Register                          |    Initial |
|------------+---------------+-----------------------------------+------------|
| 0x4F010000 | UARTL_RXFIFOR | Rx FIFO Register                  | 0x00000000 |
| 0x4F010004 | UARTL_TXFIFOR | Tx FIFO Register                  | 0x00000000 |
| 0x4F010008 | UARTL_STATR   | Status Register                   | 0x00000004 |
| 0x4F01000C | UARTL_CTRLR   | Control Register                  | 0x00000000 |
| 0x4F010010 | UARTL_UBRSR   | UART Baudrate Setting Register    | 0x000001A0 |
| 0x4F01F000 | UARTL_VER     | AHB UART Lite IP Version Register |          - |

*** Rx FIFO Register (Offset 0x0000)
Rx FIFO Registerは、UARTの受信データを読み出すためのレジスタです。

Rx FIFOは受信したデータを 1 Byte単位で最大 16エントリまで格納できます。

#+CAPTION: Rx FIFO Register ビットフィールド
|  bit | Symbol | Field        | Description                                                                                         | R/W |
|------+--------+--------------+-----------------------------------------------------------------------------------------------------+-----|
| 31:8 | -      | Reserved     | Reserved                                                                                            | -   |
|  7:0 | RXDATA | UART Rx Data | 受信したデータを Rx FIFOから読み出すためのレジスタです。UART受信した順に 1 Byteずつ読み出されます。 | RO  |

*** Tx FIFO Register (Offset 0x0004)
Tx FIFO Registerは、UARTの送信データを書き込むためのレジスタです。

書き込みデータは Tx FIFOに格納され、書き込み後直ちに送信を開始します。
Tx FIFOは送信するデータを 1 Byte単位で最大 16エントリまで格納できます。

#+CAPTION: Tx FIFO Register ビットフィールド
|  bit | Symbol | Field        | Description                                                                                                             | R/W |
|------+--------+--------------+-------------------------------------------------------------------------------------------------------------------------+-----|
| 31:8 | -      | Reserved     | Reserved                                                                                                                | -   |
|  7:0 | TXDATA | UART Tx Data | 送信データを Tx FIFOに書き込むためのレジスタです。このTx FIFOに書き込みが行われると、ただちにUARTの送信が開始されます。 | WO  |

*** Status Register (Offset 0x0008)
Status Registerは、AHB UART Liteの Errorや FIFOのステータスを確認するためのレジスタです。

Control Registerの INTENACTLが "1"にセットされている時、RXFIFOVALビット・TXFIFOEMPビット・RXUNDERRUNERRビット・TXOVERRUNERRビットのいずれかが "0"から "1"に変化するたびに CPUに対しエッジ割り込みが出力されます。

#+CAPTION: Status Register ビットフィールド
|   bit | Symbol        | Field                  | Description                                                                                                                                                                                                                                                                                                  | R/W |
|-------+---------------+------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:10 | -             | Reserved               | Reserved                                                                                                                                                                                                                                                                                                     | -   |
|     9 | TXOVERRUNERR  | Tx FIFO Overrun Error  | Tx FIFOが Fullの時に Tx FIFO Registerに書き込んだことにより Tx FIFOで Overrunエラーが発生したことを示すビットです。このビットは 読み出すとクリアされます。0: Tx FIFO Overrunエラー未発生 1: Tx FIFO Overrunエラー発生  Tx FIFO Overrunエラー発生時の書き込みデータは無効となり、Tx FIFOに格納されません。    | RC  |
|     8 | RXUNDERRUNERR | Rx FIFO Underrun Error | Rx FIFOが Emptyの時に Rx FIFO Registerを読み出したことにより Rx FIFOで Underrunエラーが発生したことを示すビットです。このビットは 読み出すとクリアされます。0: Rx FIFO Underrunエラー未発生 1: Rx FIFO Underrunエラー発生  Rx FIFO Underrunエラー発生時の Rx FIFO Registerからは無効データが読み出されます。 | RC  |
|     7 | PRTYERR       | Parity Error           | 受信したUARTフレームでParityエラーが発生したことを示すビットです。このビットは 読み出すとクリアされます。0: Parityエラー未発生 1: Parityエラー発生 このビットはUARTがParity無しで設定されている場合はアサートしません。                                                                                      | RC  |
|     6 | FRAMEERR      | Frame Error            | 受信したUARTフレームで Frameエラーが発生したことを示すビットです。このビットは 読み出すとクリアされます。0: Frameエラー未発生 1: Frameエラー発生　Frameエラー発生時の受信データは無効となり、Rx FIFOに格納されません。                                                                                       | RC  |
|     5 | RXOVERRUNERR  | Rx FIFO Overrun Error  | Rx FIFOが Fullの時に UART受信したことにより Rx FIFOで Overrunエラーが発生したことを示すビットです。このビットは 読み出すとクリアされます。0: Rx FIFO Overrunエラー未発生 1: Rx FIFO Overrunエラー発生  Rx FIFO Overrunエラー発生時の受信データは無効となり、Rx FIFOに格納されません。                        | RC  |
|     4 | INTENAMON     | Int Enabled Monitor    | 割り込み通知ステータスを示します。Control Registerの INTENACTLが "1"にセットされている時、このビットは "1"になります。0: 割り込み通知は無効 1: 割り込み通知は有効                                                                                                                                            | RO  |
|     3 | TXFIFOFULL    | Tx FIFO Full           | Tx FIFOのFull状態を示します。0: Tx FIFOは Full状態でない 1: Tx FIFOは Full状態                                                                                                                                                                                                                               | RO  |
|     2 | TXFIFOEMP     | Tx FIFO Empty          | Tx FIFOのEmpty状態を示します。0: Tx FIFOは Empty状態でない 1: Tx FIFOは Empty状態                                                                                                                                                                                                                            | RO  |
|     1 | RXFIFOFULL    | Rx FIFO Full           | Rx FIFOのFull状態を示します。0: Rx FIFOは Full状態でない 1: Rx FIFOはFull状態                                                                                                                                                                                                                                | RO  |
|     0 | RXFIFOVAL     | Rx FIFO Valid Data     | Rx FIFOの有効データ格納状態を示します。0: Rx FIFOにデータ無し 1: Rx FIFOにデータ有り                                                                                                                                                                                                                         | RO  |

*** Control Register (Offset 0x000C)
Control Registerは、Tx FIFO/Rx FIFOのリセット制御と割り込み通知の設定を行うためのレジスタです。

#+CAPTION: Control Register ビットフィールド
|  bit | Symbol    | Field              | Description                                                                                             | R/W |
|------+-----------+--------------------+---------------------------------------------------------------------------------------------------------+-----|
| 31:5 | -         | Reserved           | Reserved                                                                                                | -   |
|    4 | INTENACTL | Int Enable Control | AUB UART Liteの割り込み通知の有無を設定します。 0: 割り込み通知を無効にする 1: 割り込み通知を有効にする | WO  |
|  3:2 | -         | Reserved           | Reserved                                                                                                | -   |
|    1 | RXFIFORST | Reset Rx FIFO      | このビットは Rx FIFOをクリアするためのビットです。このビットに1を書き込むと Rx FIFOをリセットします。   | WO  |
|    0 | TXFIFORST | Reset Tx FIFO      | このビットは Tx FIFOをクリアするためのビットです。このビットに1を書き込むと Tx FIFOをリセットします。   | WO  |

*** UART Baudrate Setting Register (Offset 0x0010)
UART Baudrate Setting Registerは、UART通信のボーレートを設定するためのレジスタです。

この設定では、UARTの 1ビットの幅がシステムクロックの何サイクルで生成するかを設定します。
そのため、System Register.System Clock Control Registerの CLKMODEの設定を変更し、システムクロックの周波数が変わると設定しなおす必要があります。

レジスタの設定値はシステムクロックの周期と、設定するボーレートから以下のように計算することができます。

#+BEGIN_QUOTE
$UDIVSET = \frac{1}{{baudrate[bps]}\times{SYSCLK\ period[s]}}-1$
#+END_QUOTE

#+CAPTION: UART Baudrate Setting Register ビットフィールド
|  bit | Symbol  | Field                | Description                                          | R/W |
|------+---------+----------------------+------------------------------------------------------+-----|
| 15:0 | UDIVSET | UART Divider Setting | UART通信のボーレートを設定するためのフィールドです。 | R/W |

*** AHB UART Lite IP Version Register (Offset: 0xF000)
AHB UART Lite IPのバージョン管理用レジスタです。

#+CAPTION: AHB UART Lite IP Version Register ビットフィールド
|   bit | Symbol     | Field                          | Description                           | R/W |
|-------+------------+--------------------------------+---------------------------------------+-----|
| 31:24 | MAJVER     | AHB UART Lite IP Major Version | AHB UART LiteコアのMajor Versionです。  | RO  |
| 23:16 | MINVER     | AHB UART Lite IP Minor Version | AHB UART LiteコアのMinor Versionです。  | RO  |
|  15:0 | PATVER     | AHB UART Lite IP Patch Version | AHB UART LiteコアのPatch Versionです。  | RO  |

* I2C Master Controller
I2C Master Controllerは、I2Cデバイスとの通信を行うためのモジュールです。

SC OBCには、SC OBC Module上の I2Cデバイスにアクセスするための I2C Interface(Internal I2C)と、SC OBC Moduleの Board to Boardコネクタを介した外部の I2Cデバイスにアクセスするための I2C Interface(External I2C)が準備されています。
これら 2つの I2C Interfaceを制御するため、SC OBC FPGAには 2個の I2C Master Controllerが搭載されています。

** レジスタ詳細
I2C Master Controller Registerは、それぞれ以下のアドレスに配置されています。

#+CAPTION: I2C Master Controller メモリマップ
| Target                  | Base Address |
|-------------------------+--------------|
| Internal I2C Controller | 0x4F02_0000  |
| External I2C Controller | 0x4F03_0000  |

I2C Master Controllerには以下のレジスタが実装されています。

#+CAPTION: I2C Master Controller Register アドレスマップ
| Offset | Symbol       | Register                                                |    Initial |
|--------+--------------+---------------------------------------------------------+------------|
| 0x0000 | I2CM_ENR     | I2C Master Enable Register                              | 0x00000000 |
| 0x0004 | I2CM_TXFIFOR | I2C Master TX FIFO Register                             | 0x00000000 |
| 0x0008 | I2CM_RXFIFOR | I2C Master RX FIFO Register                             | 0x00000000 |
| 0x000C | I2CM_BSR     | I2C Master Bus Status Register                          | 0x00000000 |
| 0x0010 | I2CM_ISR     | I2C Master Interrupt Status Register                    | 0x00000000 |
| 0x0014 | I2CM_IER     | I2C Master Interrupt Enable Register                    | 0x00000000 |
| 0x0018 | I2CM_FIFOSR  | I2C Master FIFO Status Register                         | 0x00000000 |
| 0x001C | I2CM_FIFORR  | I2C Master FIFO Reset Register                          | 0x00000000 |
| 0x0020 | I2CM_FTLSR   | I2C Master FIFO Threshold Level Setting Register        | 0x00000000 |
| 0x0024 | I2CM_SCLTSR  | I2C Master SCL Timeout Setting Register                 | 0x00000000 |
| 0x0030 | I2CM_THDSTAR | I2C Master START Hold Timing Setting Register           | 0x00000031 |
| 0x0034 | I2CM_TSUSTOR | I2C Master STOP Setup Timing Setting Register           | 0x00000031 |
| 0x0038 | I2CM_TSUSTAR | I2C Master Repeated START Setup Timing Setting Register | 0x00000031 |
| 0x003C | I2CM_THIGHR  | I2C Master Clock High Timing Setting Register           | 0x00000039 |
| 0x0040 | I2CM_THDDATR | I2C Master Data Hold Timing Setting Register            | 0x00000004 |
| 0x0044 | I2CM_TSUDATR | I2C Master Data Setup Timing Setting Register           | 0x00000039 |
| 0x0048 | I2CM_TBUFR   | I2C Master Bus Free Timing Setting Register             | 0x00000045 |
| 0x004C | I2CM_TBSMPLR | I2C Master Bus Sampling Timing Setting Register         | 0x00000000 |
| 0xF000 | I2CM_VER     | I2C Master Controller IP Version Register               |          - |

*** I2C Master Enable Register (Offset 0x0000)
I2C Master Enable Registerは、I2C Master ControllerのEnable設定を行うレジスタです。

EnableがOFFの時は、I2C Master ControllerはI2C Busに接続される FPGAのBufferを HiZ状態とし、一切の送受信を行いません。
EnableをONにすると、I2C BusがIdle状態の時に送受信が可能となります。

#+CAPTION: I2C Master Enable Register ビットフィールド
|  bit | Symbol  | Field      | Description                                                             | R/W |
|------+---------+------------+-------------------------------------------------------------------------+-----|
| 31:1 | -       | Reserved   | Reserved                                                                | -   |
|    0 | I2CM_EN | I2C Enable | I2C Master ControllerのEnable設定を行います。0: Enable OFF 1: Enable ON | R/W |

*** I2C Master TX FIFO Register (Offset 0x0004)
I2C Master TX FIFO Registerは、I2Cデバイスへ送信するデータや、送受信データのフォーマットを設定するためのレジスタです。

レジスタに書き込む値は、転送状況によって変わります。

転送開始の 1 Byte目は、I2CM_TXDATAフィールドの ビット7:1に 通信する I2Cデバイスのデバイスアドレスを書き込み、ビット0に R/W情報として 次の転送サイクルが 送信モードの場合は"0", 受信モードの場合は"1"を書き込みます。
ここで書き込まれた 8ビットのデータは MSB側から順にそのまま I2Cバスに出力されます。

1 Byte目にビット0に書き込まれた R/W情報によって、送信モード(R/W: 0)となる場合、2 Byte目以降は I2CM_TXDATAに転送データを書き込みます。
送信モードの場合、I2CM_TXDATAの書き込みと同時に I2CM_STOPか I2CM_RESTARTが "1"に書き込まれるまで転送が継続します。
I2CM_TXDATAと共に I2CM_STOPが"1"に書き込まれた場合は、データ送信の完了後に STOP Conditionが送信され、I2CM_TXDATAと共に I2CM_RESTARTが"1"に書き込まれた場合は、データ送信の完了後に Repeated START Conditionが送信されます。
この状態になると、次の送信は 1 Byte目の送信状態に戻ります。

1 Byte目にビット0に書き込まれた R/W情報によって、受信モード(R/W: 1)となる場合、2 Byte目の I2CM_TXDATAには受信データの Byte数を書き込みます。
この時、書き込む受信データの Byte数は、「実際に受信する Byte数 - 1」の値を設定します。
また、最終Byteとなるデータの受信後に STOP Conditionまたは Repeated START Conditionを送信するため、I2CM_STOPか I2CM_RESTARTのどちらかのビットを"1"にセットします。

本レジスタの設定については「I2C通信操作手順例」も参照してください。

#+CAPTION: I2C Master TX FIFO Register ビットフィールド
|   bit | Symbol       | Field                        | Description                                                                                                                                                                                  | R/W |
|-------+--------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:10 | -            | Reserved                     | Reserved                                                                                                                                                                                     | -   |
|     9 | I2CM_RESTART | I2C Repeated START Condition | 最終 Byteの転送完了後に I2C BusにRepeated START Conditionを送信する場合にセットするビットです。最終Byteの送受信後にRepeated START Conditionを挿入する場合は、このビットを"1"にセットします。 | WO  |
|     8 | I2CM_STOP    | I2C STOP Condition           | 最終 Byteの転送完了後に I2C BusにSTOP Conditionを送信する場合にセットするビットです。最終Byteの送受信後にSTOP Conditionを送信する場合は、このビットを"1"にセットします。                     | WO  |
|   7:0 | I2CM_TXDATA  | I2C Tx Data                  | I2Cの送信データを設定します。このレジスタの書き込みデータは、送信モードでは送信データ, 受信モードでは 受信データ Byte数となります。                                                          | WO  |

*** I2C Master RX FIFO Register (Offset 0x0008)
I2C Master RX FIFO Registerは、I2Cデバイスから受信したデータを読み出すためのレジスタです。

I2Cデバイスから受信データは RX FIFOに格納されます。
RX FIFOは 16 Byte実装されており、このレジスタを読み出す事で RX FIFOに格納されたデータを 1 Byteずつデータを読み出す事ができます。

#+CAPTION: I2C Master RX FIFO Register ビットフィールド
|  bit | Symbol      | Field       | Description                                                   | R/W |
|------+-------------+-------------+---------------------------------------------------------------+-----|
| 31:8 | -           | Reserved    | Reserved                                                      | -   |
|  7:0 | I2CM_RXDATA | I2C Rx Data | I2Cデバイスから受信したデータを読み出すためのフィールドです。 | RO  |

*** I2C Master Bus Status Register (Offset 0x000C)
I2C Master Bus Status Registerは、I2C Busのステータスを確認するためのレジスタです。
I2C_SELFBUSY,I2C_OTHERBUSYビットがともに"0"を示す時、I2C BusがIdle状態であることを示します。

#+CAPTION: I2C Master Bus Status Register ビットフィールド
|  bit | Symbol         | Field                               | Description                                                                                                                                              | R/W |
|------+----------------+-------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:2 | -              | Reserved                            | Reserved                                                                                                                                                 | -   |
|    1 | I2CM_OTHERBUSY | I2C Bus Busy by Other Communication | 同一I2C Busのバス状態を示すビットです。他のマスターデバイスがI2C通信中の時、このビットは"1"を示します。このビットはI2C EnableがOFFの状態でも機能します。 | RO  |
|    0 | I2CM_SELFBUSY  | I2C Bus Busy by Self Communication  | I2C Master ControllerのI2Cバス状態を示すビットです。自身のI2C Master ControllerがI2C通信中、このビットは"1"を示します。                                  | RO  |

*** I2C Master Interrupt Status Register (Offset: 0x0010)
I2C Master Interrupt Status Registerは、I2C Master Controllerの割り込みステータスレジスタです。
それぞれのビットは"1"をセットすると、割り込みをクリアする事ができます。

#+CAPTION: I2C Master Interrupt Status Register ビットフィールド
|   bit | Symbol         | Field                       | Description                                                                                                                                                                                                                                                                          | R/W  |
|-------+----------------+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------|
| 31:13 | -              | Reserved                    | Reserved                                                                                                                                                                                                                                                                             | -    |
|    12 | I2CM_SCLTO     | I2C SCL Timeout             | 通信中のSCL Timeoutが発生した事を示すビットです。I2CデバイスによるSCLのクロックストレッチ機能等により、通信中にSCLがLoとなっている時間が I2C Master SCL Timeout Setting RegisterのI2CM_SCLTOPRODフィールドの設定値を超えたとき本ビットが"1"にセットされます。                    | R/WC |
|    11 | I2CM_RXFIFOUDF | I2C RX FIFO Underflow       | RX FIFOの Underflowが発生したことを示すビットです。RX FIFOが Emptyの時に、I2C Master RX FIFO Registerの読み出しが行われたとき、本ビットが"1"にセットされます。                                                                                                                       | R/WC |
|    10 | I2CM_TXFIFOOVF | I2C TX FIFO Overflow        | TX FIFOの Overflowが発生したことを示すビットです。TX FIFOが Fullの時に、I2C Master TX FIFO Registerへの書き込みを行ったとき、本ビットが"1"にセットされます。                                                                                                                         | R/WC |
|     9 | I2CM_BITER     | I2C BIT Error               | BIT Errorが発生したことを示すビットです。Lowレベルのビットを送信した時に、異なるレベルが検出された場合に本ビットが"1"にセットされます。BIT Errorを検出すると、I2C Master Controllerは以降のデータ送信を停止し、STOP Conditionを送信してからI2C EnableをOffにしてIdle状態に戻ります。    | R/WC |
|     8 | I2CM_ACKER     | I2C ACK Error               | ACK Errorが発生したことを示すビットです。送信中に ACKビットでLowレベルが検出出来なかった場合に本ビットが"1"にセットされます。ACK Errorを検出すると、I2C Master Controllerは以降のデータ送信を停止し、STOP Conditionを送信してからI2C EnableをOffにしてIdle状態に戻ります。              | R/WC |
|   7:6 | -              | Reserved                    | Reserved                                                                                                                                                                                                                                                                             | -    |
|     5 | I2CM_RXFIFOOTH | I2C RX FIFO Over Threshold  | RX FIFOに格納されるデータが閾値を上回ったことを示すビットです。データ量が I2C Master FIFO Threshold Level Setting Registerの I2CM_RXFIFOOTHLフィールドの設定値より多くなった場合に本ビットが"1"にセットされます。                                                                    | R/WC |
|     4 | I2CM_TXFIFOUTH | I2C TX FIFO Under Threshold | TX FIFOに格納されるデータが閾値を下回ったことを示すビットです。データ量が I2C Master FIFO Threshold Level Setting Registerの I2CM_TXFIFOUTHLフィールドの設定値より少なくなった場合に本ビットが"1"にセットされます。                                                                  | R/WC |
|   3:2 | -              | Reserved                    | Reserved                                                                                                                                                                                                                                                                             | -    |
|     1 | I2CM_ARBLST    | I2C Arbitration Lost        | 送信中にArbitration Lostが発生した事を示すビットです。送信中に他の I2C Masterと送信が競合したことによる調停制御で送信を停止した場合、本ビットが"1"にセットされます。Arbitration Lostを検出すると、I2C Master Controllerは I2C EnableをOffにしてIdle状態に戻ります。                  | R/WC |
|     0 | I2CM_COMP      | I2C Complite                | I2C Master ControllerによるI2C通信が正常に完了した事を示すビットです。I2C通信の正常完了で I2C BusにSTOP Conditionを送信した時、本ビットが"1”にセットされます。Arbitration LostやError検出によるSTOP Conditionの送信時には本ビットはセットされません。                               | R/WC |

*** I2C Master Interrupt Enable Register (Offset: 0x0014)
I2C Master Interrupt Enable Registerは、I2C Master Controllerの割り込みイベントを割り込み信号に通知する設定を行うためのレジスタです。

Interrupt Enable Registerのビットが "1"にセットした時、その割り込み要因に対応する Interrupt Status Registerのビットが "1"にセットされた時、レベル割り込みが出力します。

#+CAPTION: I2C Master Interrupt Enable Register ビットフィールド
|   bit | Symbol            | Field                              | Description                                                                        | R/W |
|-------+-------------------+------------------------------------+------------------------------------------------------------------------------------+-----|
| 31:13 | -                 | Reserved                           | Reserved                                                                           | -   |
|    12 | I2CM_SCLTOENB     | I2C SCL Timeout Enable             | I2CM_SCLTOイベントが発生した時に割り込み信号を発生させるかどうかを設定します。     | R/W |
|    11 | I2CM_RXFIFOUDFENB | I2C RX FIFO Underflow Enable       | I2CM_RXFIFOUDFイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
|    10 | I2CM_TXFIFOOVFENB | I2C TX FIFO Overflow Enable        | I2CM_TXFIFOOVFイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
|     9 | I2CM_BITERENB     | I2C BIT Error Enable               | I2CM_BITERイベントが発生した時に割り込み信号を発生させるかどうかを設定します。     | R/W |
|     8 | I2CM_ACKERENB     | I2C ACK Error Enable               | I2CM_ACKERイベントが発生した時に割り込み信号を発生させるかどうかを設定します。     | R/W |
|   7:6 | -                 | Reserved                           | Reserved                                                                           | -   |
|     5 | I2CM_RXFIFOOTHENB | I2C RX FIFO Over Threshold Enable  | I2CM_RXFIFOOTHイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
|     4 | I2CM_TXFIFOUTHENB | I2C TX FIFO Under Threshold Enable | I2CM_TXFIFOUTHイベントが発生した時に割り込み信号を発生させるかどうかを設定します。 | R/W |
|   3:2 | -                 | Reserved                           | Reserved                                                                           | -   |
|     1 | I2CM_ARBLSTENB    | I2C Arbitration Lost Enable        | I2CM_ARBLSTイベントが発生した時に割り込み信号を発生させるかどうかを設定します。    | R/W |
|     0 | I2CM_COMPENB      | I2C Complite Enable                | I2CM_COMPイベントが発生した時に割り込み信号を発生させるかどうかを設定します。      | R/W |

*** I2C Master FIFO Status Register (Offset 0x0018)
I2C Master FIFO Status Registerは、TX FIFO/RX FIFOに格納されているデータ量を読み出すためのレジスタです。

#+CAPTION: I2C Master FIFO Status Register ビットフィールド
|   bit | Symbol         | Field                | Description                                           | R/W |
|-------+----------------+----------------------+-------------------------------------------------------+-----|
| 31:21 | -              | Reserved             | Reserved                                              | -   |
| 20:16 | I2CM_RXFIFOCAP | I2C RX FIFO Capacity | RX FIFOに格納されているデータ量を示すフィールドです。 | RO  |
|  15:5 | -              | Reserved             | Reserved                                              | -   |
|   4:0 | I2CM_TXFIFOCAP | I2C TX FIFO Capacity | TX FIFOに格納されているデータ量を示すフィールドです。 | RO  |

*** I2C Master FIFO Reset Register (Offset 0x001C)
I2C Master FIFO Reset Registerは、TX FIFO/RX FIFOのリセットを行うためのレジスタです。
何らかの理由によりFIFOのクリアを行いたい場合にこのレジスタを使用します。

#+CAPTION: I2C Master FIFO Reset Register ビットフィールド
|   bit | Symbol         | Field             | Description                                                                                                     | R/W |
|-------+----------------+-------------------+-----------------------------------------------------------------------------------------------------------------+-----|
| 31:17 | -              | Reserved          | Reserved                                                                                                        | -   |
|    16 | I2CM_RXFIFORST | I2C RX FIFO Reset | RX FIFOをリセットするためのビットです。本ビットに"1"をセットすると、TX FIFOがリセットされデータが消去されます。 | WO  |
|  15:1 | -              | Reserved          | Reserved                                                                                                        | -   |
|     0 | I2CM_TXFIFORST | I2C TX FIFO Reset | TX FIFOをリセットするためのビットです。本ビットに"1"をセットすると、RX FIFOがリセットされデータが消去されます。 | WO  |

*** I2C Master FIFO Threshold Level Setting Register (Offset 0x0020)
I2C Master FIFO Threshold Level Registerは、TX FIFO/RX FIFOのデータ量に応じた割り込み出力を行うための設定レジスタです。

#+CAPTION: I2C Master FIFO Threshold Level Setting Register ビットフィールド
|   bit | Symbol          | Field                             | Description                                                                                                                                                                | R/W |
|-------+-----------------+-----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:21 | -               | Reserved                          | Reserved                                                                                                                                                                   | -   |
| 20:16 | I2CM_RXFIFOOTHL | I2C RX FIFO Over Threshold Level  | I2CM_RXFIFOOTH割り込みを発生させるRX FIFOのデータ格納量の閾値を設定するためのフィールドです。本フィールドに 0または最大値を設定した場合 I2CM_RXFIFOOTHは無効となり、割り込みは発生しません。 | R/W |
|  15:5 | -               | Reserved                          | Reserved                                                                                                                                                                   | -   |
|   4:0 | I2CM_TXFIFOUTHL | I2C TX FIFO Under Threshold Level | I2CM_TXFIFOUTH割り込みを発生させるTX FIFOのデータ格納量の閾値を設定するためのフィールドです。本フィールドに 0または最大値を設定した場合 I2CM_TXFIFOUTHは無効となり、割り込みは発生しません。     | R/W |

*** I2C Master SCL Timeout Setting Register (Offset 0x0024)
I2C Master SCL Timeout Setting Registerは、SCL Timeout割り込み発生させるための SCL Timeout時間を設定するレジスタです。

#+CAPTION: I2C Master SCL Timeout Setting Register ビットフィールド
|   bit | Symbol         | Field                  | Description                                                                                                                                                                                                        | R/W |
|-------+----------------+------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | -              | Reserved               | Reserved                                                                                                                                                                                                           | -   |
|  15:0 | I2CM_SCLTOPROD | I2C SCL Timeout Period | I2CM_SCLTO割り込みを発生させる SCL Low期間を設定するためのフィールドです。このフィールドには、1 us単位の Timeout時間を設定します。本フィールドを0に設定した場合は I2CM_SCLTOは無効となり、割り込みは発生しません。 | R/W |

*** I2C Master START Hold Timing Setting Register (Offset 0x0030)
I2C Master START Hold Timing Setting Registerは、I2C規格における START/Repeated START Conditionの Hold時間を設定するためのレジスタです。
このレジスタは、I2C Master Enable RegisterのI2CM_ENビットが"0"の時のみ書き込みが可能です。

#+CAPTION: I2C Master START Hold Timing Setting Register ビットフィールド
|   bit | Symbol      | Field               | Description                                                                                                                     | R/W |
|-------+-------------+---------------------+---------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | -           | Reserved            | Reserved                                                                                                                        | -   |
|  15:0 | I2CM_THDSTA | I2C START Hold Time | START ConditionのHold時間を設定するフィールドです。このフィールドはシステムクロックのサイクル数によってタイミングを設定します。 | R/W |

レジスタ設定によるSTART Hold Time(tHDSTA)は、次の式で計算できます。

#+BEGIN_QUOTE
$tHDSTA [s] = System\ Clock\ period\ [s] \times \left(I2CM\_THDSTA +1\right)$
#+END_QUOTE

このレジスタの設定を行う場合は「I2Cタイミングパラメータの設定」も参照してください。

*** I2C Master STOP Setup Timing Setting Register (Offset 0x0034)
I2C Master STOP Setup Timing Setting Registerは、I2C規格における STOP ConditionのSetup時間を設定するためのレジスタです。
このレジスタは、I2C Master Enable RegisterのI2CM_ENビットが"0"の時のみ書き込みが可能です。

#+CAPTION: I2C Master STOP Setup Timing Setting Register ビットフィールド
|   bit | Symbol      | Field               | Description                                                                                                                     | R/W |
|-------+-------------+---------------------+---------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | -           | Reserved            | Reserved                                                                                                                        | -   |
|  15:0 | I2CM_TSUSTO | I2C STOP Setup Time | STOP ConditionのSetup時間を設定するフィールドです。このフィールドはシステムクロックのサイクル数によってタイミングを設定します。 | R/W |

レジスタ設定によるSTOP Setup Time(tSUSTO)は、次の式で計算できます。

#+BEGIN_QUOTE
$tSUSTO [s] = System\ Clock\ period\ [s] \times \left(I2CM\_TSUSTO +1\right)$
#+END_QUOTE

マルチマスター構成となる場合、または、クロックストレッチ機能を持った I2Cデバイスと接続して通信する場合、このレジスタは"0x3"以上に設定してください。

このレジスタの設定を行う場合は「I2Cタイミングパラメータの設定」も参照してください。

*** I2C Master Repeated START Setup Timing Setting Register (Offset 0x0038)
I2C Master Repeated START Setup Timing Setting Registerは、I2C規格における Repeated START ConditionのSetup時間を設定するためのレジスタです。
このレジスタは、I2C Master Enable RegisterのI2CM_ENビットが"0"の時のみ書き込みが可能です。

#+CAPTION: I2C Master Repeated START Setup Timing Setting Register ビットフィールド
|   bit | Symbol      | Field                         | Description                                                                                                                               | R/W |
|-------+-------------+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | -           | Reserved                      | Reserved                                                                                                                                  | -   |
|  15:0 | I2CM_TSUSTA | I2C Repeated START Setup Time | Repeated START ConditionのSetup時間を設定するフィールドです。このフィールドはシステムクロックのサイクル数によってタイミングを設定します。 | R/W |

レジスタ設定によるRepeated START Setup Time(tSUSTA)は、次の式で計算できます。

#+BEGIN_QUOTE
$tSUSTA [s] = System\ Clock\ period\ [s] \times \left(I2CM\_TSUSTA +1\right)$
#+END_QUOTE

マルチマスター構成となる場合、または、クロックストレッチ機能を持った I2Cデバイスと接続して通信する場合、このレジスタは 0x3以上に設定してください。

このレジスタの設定を行う場合は「I2Cタイミングパラメータの設定」も参照してください。

*** I2C Master Clock High Timing Setting Register (Offset 0x003C)
I2C Master Clock High Timing Setting Registerは、I2C規格における SCLのHigh時間を設定するレジスタです。
このレジスタは、I2C Master Enable RegisterのI2CM_ENビットが"0"の時のみ書き込みが可能です。

#+CAPTION: I2C Master Clock High Timing Setting Register ビットフィールド
|   bit | Symbol     | Field               | Description                                                                                                         | R/W |
|-------+------------+---------------------+---------------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | -          | Reserved            | Reserved                                                                                                            | -   |
|  15:0 | I2CM_THIGH | I2C SCL High period | SCLのHigh時間を設定するフィールドです。このフィールドはシステムクロックのサイクル数によってタイミングを設定します。 | R/W |

レジスタ設定によるSCLのHigh時間(tHIGH)は、次の式で計算できます。

#+BEGIN_QUOTE
$tHIGH\ [s] = System\ Clock\ period\ [s] \times \left(I2CM\_THIGH +1\right)$
#+END_QUOTE

このレジスタは必ず"0x4"以上に設定する必要があります。

このレジスタの設定を行う場合は「I2Cタイミングパラメータの設定」も参照してください。

*** I2C Master Data Hold Timing Setting Register (Offset 0x0040)
I2C Master Data Hold Timing Setting Registerは、I2C規格における データのHold時間を設定するためのレジスタです。
このレジスタは、I2C Master Enable RegisterのI2CM_ENビットが"0"の時のみ書き込みが可能です。

#+CAPTION: I2C Master Data Hold Timing Setting Register ビットフィールド
|   bit | Symbol      | Field              | Description                                                                                                | R/W |
|-------+-------------+--------------------+------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | -           | Reserved           | Reserved                                                                                                   | -   |
|  15:0 | I2CM_THDDAT | I2C Data Hold Time | データのHold時間を設定するフィールドです。このフィールドはシステムクロックのサイクル数によって設定します。 | R/W |

レジスタ設定によるData Hold Time(tHDDAT)は、次の式で計算できます。

#+BEGIN_QUOTE
$tHDDAT\ [s] = System\ Clock\ period\ [s] \times \left(I2CM\_THDDAT +1\right)$
#+END_QUOTE

マルチマスター構成となる場合、または、クロックストレッチ機能を持った I2Cデバイスと接続して通信する場合、このレジスタは"0x3"以上に設定してください。

このレジスタの設定を行う場合は「I2Cタイミングパラメータの設定」も参照してください。

*** I2C Master Data Setup Timing Setting Register (Offset 0x0044)
I2C Master Data Setup Timing Setting Registerは、I2C規格における データのSetup時間を設定するためのレジスタです。
このレジスタは、I2C Master Enable RegisterのI2CM_ENビットが"0"の時のみ書き込みが可能です。

#+CAPTION: I2C Master Data Setup Timing Setting Register ビットフィールド
|   bit | Symbol      | Field               | Description                                                                                                 | R/W |
|-------+-------------+---------------------+-------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | -           | Reserved            | Reserved                                                                                                    | -   |
|  15:0 | I2CM_TSUDAT | I2C Data Setup Time | データのSetup時間を設定するフィールドです。このフィールドはシステムクロックのサイクル数によって設定します。 | R/W |

レジスタ設定によるData Setup Time(tSUDAT)は、次の式で計算できます。

#+BEGIN_QUOTE
$tSUDAT\ [s] = System\ Clock\ period\ [s] \times \left(I2CM\_TSUDAT +1\right)$
#+END_QUOTE

また、SCLのLow時間(tLOW)は、Data Hold TimeとData Setup Timeの和により決定されます。

#+BEGIN_QUOTE
$tLOW\ [s] = tHDDAT\ [s] + tSUDAT\ [s]$
#+END_QUOTE

このレジスタの設定を行う場合は「I2Cタイミングパラメータの設定」も参照してください。

*** I2C Master Bus Free Timing Setting Register (Offset 0x0048)
I2C Master Bus Free Timing Setting Registerは、I2C規格における ConditionとSTART Condition間のBus開放時間を設定するためのレジスタです。
このレジスタは、I2C Master Enable RegisterのI2CM_ENビットが"0"の時のみ書き込みが可能です。

#+CAPTION: I2C Master Bus Free Timing Setting Register ビットフィールド
|   bit | Symbol    | Field             | Description                                                                                                 | R/W |
|-------+-----------+-------------------+-------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | -         | Reserved          | Reserved                                                                                                    | -   |
|  15:0 | I2CM_TBUF | I2C Bus Free Time | I2C Busの開放時間を設定するフィールドです。このフィールドはシステムクロックのサイクル数によって設定します。 | R/W |

レジスタ設定によるBus Free Time(tBUF)は、次の式で計算できます。

#+BEGIN_QUOTE
$tBUF\ [s] = System\ Clock\ period\ [s] \times \left(I2CM\_TBUF +1\right)$
#+END_QUOTE

このレジスタの設定を行う場合は「I2Cタイミングパラメータの設定」も参照してください。

*** I2C Master Bus Sampling Timing Setting Register (Offset 0x004C)
I2C Master Bus Sampling Timing Setting Registerは、受信データのサンプリングタイミングを設定するためのレジスタです。

SCLの立ち上がりタイミングを起点として、このレジスタに設定した遅延時間後に SDA信号のサンプリングを行います。
このレジスタは、I2C Master Enable RegisterのI2CM_ENビットが"0"の時のみ書き込みが可能です。

#+CAPTION: I2C Master Bus Sampling Timing Setting Register ビットフィールド
|   bit | Symbol       | Field              | Description                                                                                                               | R/W |
|-------+--------------+--------------------+---------------------------------------------------------------------------------------------------------------------------+-----|
| 31:16 | -            | Reserved           | Reserved                                                                                                                  | -   |
|  15:0 | I2CM_SMPLDLY | I2C Sampling Delay | SDAをサンプリングするタイミングを設定するフィールドです。このフィールドはシステムクロックのサイクル数によって設定します。 | R/W |

レジスタ設定によるSDAのサンプリング遅延時間は、次の式で計算できます。

#+BEGIN_QUOTE
$SDA Sampling Delay\ [s] = System\ Clock\ period\ [s] \times I2CM\_SMPLDLY$
#+END_QUOTE

*** I2C Master Controller IP Version Register (Offset: 0xF000)
I2C Master Controller IPコアバージョンの管理レジスタです。

#+CAPTION: I2C Master Controller IP Version Register ビットフィールド
|   bit | Symbol | Field                                  | Description                                          | R/W |
|-------+--------+----------------------------------------+------------------------------------------------------+-----|
| 31:24 | MAJVER | I2C Master Controller IP Major Version | I2C Master ControllerコアのMajor Versionを示します。 | RO  |
| 23:16 | MINVER | I2C Master Controller IP Minor Version | I2C Master ControllerコアのMinor Versionを示します。 | RO  |
|  15:0 | PATVER | I2C Master Controller IP Patch Version | I2C Master ControllerコアのPatch Versionを示します。 | RO  |

** I2Cアクセス手順
この章では、I2C Master Controllerを使用するための、レジスタの制御手順を説明します。

*** 初期設定操作手順例
I2C Master Controllerの初期設定の手順について説明します。

#+CAPTION: 初期設定フロー
[[file:./images/i2cm_init_config_seq.png]]

I2C Master ControllerのTiming Parameterは、システムクロックが 48 MHz、Fast-mode(ビットレート:400Kb/s)でのI2C通信に合わせて初期設定がされています。
システムクロックが 48 MHz、Fast-mode(ビットレート:400Kb/s)で通信を行う場合はタイミングパラメータの設定変更を省略し、手順例8から設定を進めることが出来ます。
それ以外の場合は、タイミングパラメータの設定変更(手順例1～7)を行う必要があります。

手順例 1〜7のタイミングパラメータの設定順序に制限は無いため、この手順と異なる順序で設定しても問題ありません。
タイミングパラメータ設定の詳細や、各モードにおける設定例については「I2Cタイミングパラメータの設定」を参照してください。

1: I2C Master START Hold Timing Setting Registerの設定を行います。
2: I2C Master STOP Setup Timing Setting Registerの設定を行います。
3: I2C Master Repeated START Setup Timing Setting Registerの設定を行います。
4: I2C Master Clock High Timing Setting Registerの設定を行います。
5: I2C Master Data Hold Timing Setting Registerの設定を行います。
6: I2C Master Data Setup Timing Setting Registerの設定を行います。
7: I2C Master Bus Free Timing Setting Registerの設定を行います。
8: I2C Master Interrupt Enable Registerの使用する割り込みステータスのイネーブルビットを"1"に設定します。
9: I2C Master Enable RegisterのI2CM_ENビットを"1"に設定し、I2C Master Controllerを有効化します。

**** I2Cタイミングパラメータの設定
I2C Master ControllerによるI2C通信タイミングは、以下のレジスタ設定により決まります。
- I2C Master START Hold Timing Setting Register: START ConditionおよびRepeated START ConditionのHold時間
- I2C Master STOP Setup Timing Setting Register: STOP ConditionのSetup時間
- I2C Master Repeated START Setup Timing Setting Register: Repeated START ConditionのSetup時間
- I2C Master Clock High Timing Setting Register: I2Cクロック(SCL)のHigh期間
- I2C Master Data Hold Timing Setting Register: I2Cデータ(SDA)のHold時間
- I2C Master Data Setup Timing Setting Register: I2Cデータ(SDA)のSetup時間
- I2C Master Bus Free Timing Setting Register: STOP ConditionからSTART Condition間のBus Free時間

初期状態ではシステムクロック 48 MHz、Fast-mode(400Kb/s)で通信を行う場合のタイミングに設定されています。
接続する I2Cデバイスが対応する通信レートやモードに応じ変更することが出来ます。

各タイミングパラメータの設定により生成される、I2C Master Controllerのタイミングを以下に示します。

#+CAPTION: I2Cバスタイミング
[[file:./images/i2cm_timing.png]]

#+CAPTION: I2Cバスタイミング(Repeated Start)
[[file:./images/i2cm_timing_repsta.png]]

I2Cクロック(SCL)のLow期間(tLOW)は、I2Cデータ(SDA)のSetup/Hold時間(I2CM_TSUDAT,I2CM_THDDAT)のTotal時間となります。
I2C通信の1ビットは、I2Cクロック(SCL)のHigh期間(I2CM_THIGH)と I2Cクロック(SCL)のLow期間(tLOW)のTotal時間となります。

システムクロックが96MHz, 48MHz, 24MHzにおいて、Standard-mode(100Kb/s)、Fast-mode(400Kb/s)、Fast-mode Plus(1Mb/s)で通信する場合の、タイミングパラメータ設定値の例を以下にします。


#+CAPTION: I2C Master Controller タイミングパラメータの設定例 (システムクロック 96 MHz)
| Parameter         | Standard-mode(100Kb/s) | Fast-mode(400Kb/s) | Fast-mode Plus(1Mb/s) |
|-------------------+------------------------+--------------------+-----------------------|
| I2CM_THDSTA[15:0] | 0x01DF(5us)            | 0x0063(1.04us)     | 0x0027(0.42us)        |
| I2CM_TSUSTO[15:0] | 0x01DF(5us)            | 0x0063(1.04us)     | 0x0027(0.42us)        |
| I2CM_TSUSTA[15:0] | 0x022F(5.83us)         | 0x0063(1.04us)     | 0x0027(0.42us)        |
| I2CM_THIGH[15:0]  | 0x01CB(4.79us)         | 0x0072(1.20us)     | 0x002D(0.48us)        |
| I2CM_THDDAT[15:0] | 0x0027(0.42us)         | 0x0009(0.10us)     | 0x0003(0.04us)        |
| I2CM_TSUDAT[15:0] | 0x01CB(4.79us)         | 0x0072(1.20us)     | 0x002D(0.48us)        |
| I2CM_TBUF[15:0]   | 0x022F(5.83us)         | 0x008B(1.46us)     | 0x0037(0.58us)        |

#+CAPTION: I2C Master Controller タイミングパラメータの設定例 (システムクロック 48 MHz)
| Parameter         | Standard-mode(100Kb/s) | Fast-mode(400Kb/s)[default] | Fast-mode Plus(1Mb/s) |
|-------------------+------------------------+-----------------------------+-----------------------|
| I2CM_THDSTA[15:0] | 0x00EF(5us)            | 0x0031(1.04us)              | 0x0013(0.42us)        |
| I2CM_TSUSTO[15:0] | 0x00EF(5us)            | 0x0031(1.04us)              | 0x0013(0.42us)        |
| I2CM_TSUSTA[15:0] | 0x0117(5.83us)         | 0x0031(1.04us)              | 0x0013(0.42us)        |
| I2CM_THIGH[15:0]  | 0x00E5(4.79us)         | 0x0039(1.21us)              | 0x0015(0.46us)        |
| I2CM_THDDAT[15:0] | 0x0013(0.42us)         | 0x0004(0.10us)              | 0x0003(0.08us)        |
| I2CM_TSUDAT[15:0] | 0x00E5(4.79us)         | 0x0039(1.21us)              | 0x0015(0.46us)        |
| I2CM_TBUF[15:0]   | 0x0117(5.83us)         | 0x0045(1.46us)              | 0x001B(0.58us)        |

#+CAPTION: I2C Master Controller タイミングパラメータの設定例 (システムクロック 24 MHz)
| Parameter         | Standard-mode(100Kb/s) | Fast-mode(400Kb/s) | Fast-mode Plus(1Mb/s) |
|-------------------+------------------------+--------------------+-----------------------|
| I2CM_THDSTA[15:0] | 0x0077(5us)            | 0x0018(1.04us)     | 0x0009(0.42us)        |
| I2CM_TSUSTO[15:0] | 0x0077(5us)            | 0x0018(1.04us)     | 0x0009(0.42us)        |
| I2CM_TSUSTA[15:0] | 0x008B(5.83us)         | 0x0018(1.04us)     | 0x0009(0.42us)        |
| I2CM_THIGH[15:0]  | 0x0072(4.79us)         | 0x001B(1.17us)     | 0x0009(0.42us)        |
| I2CM_THDDAT[15:0] | 0x0009(0.42us)         | 0x0003(0.17us)     | 0x0003(0.17us)        |
| I2CM_TSUDAT[15:0] | 0x0072(4.79us)         | 0x001B(1.17us)     | 0x0009(0.42us)        |
| I2CM_TBUF[15:0]   | 0x008B(5.83us)         | 0x0022(1.46us)     | 0x000D(0.58us)        |

制限事項：
1. データ処理に必要な時間として、I2C Master Clock High Timing Setting Register(I2CM_THIGH)の設定値は、必ず0x0004以上となるように設定してください。
2. マルチマスター構成となる場合、または クロックストレッチ機能を持った I2Cデバイスと接続して通信する場合、以下のレジスタの設定値は、I2Cクロックの同期処理に必要な時間を確保するため 0x0003以上となるように設定する必要があります。
  - I2C Master STOP Setup Timing Setting Register(I2CM_TSUSTO)
  - I2C Master Repeated START Setup Timing Setting Register(I2CM_TSUSTA)
  - I2C Master Data Hold Timing Setting Register(I2CM_THDDAT)

*** I2C通信操作手順例
この章では、I2C通信を行うための I2C Master Controllerのレジスタ制御手順を説明します。

I2C Master Controllerは、マルチマスターに対応する実装のため、I2C Master Controllerと I2Cバスを切り離す機能と、I2C Busを監視する機能を持っています。
この仕様により、I2C Master Enable RegisterのI2CM_ENビットが"1"で、且つ I2C BusがIdle状態の時のみ I2C通信を開始することができます。
I2CM_ENビットが"0"、または、I2C BusがIdle状態でない場合は、I2C Master TX FIFO Registerにデータが書き込まれても I2C通信を開始せず、I2CM_ENビットが"1"、かつ、I2C BusがIdle状態になるまで Waitします。

これ以降のレジスタアクセス手順は、I2CM_ENビットが "1"で I2C Busが Idle状態である事を前提に記載しています。

**** データ書き込み操作手順
本章では I2Cデバイスへのデータ書き込みを行う場合の手順を説明します。

I2Cデバイスへデータ書き込みを行う場合の I2C Busの波形を以下に示します。

#+CAPTION: I2C書き込みアクセス波形
[[file:./images/i2cm_write_acc_seq.png]]

A: TX FIFO(I2C Master TX FIFO RegisterのI2CM_TXDATAフィールド)の Bit7-1に I2Cデバイスのアドレスと Bit0(R/Wビット)に"0"(送信モード)を書き込みます。
I2C Master ControllerはI2C書き込み動作を開始し、I2C BusにStart Condition, TX FIFOに書き込まれたアドレス, R/Wビットの順に送信します。
データ送信後の次のサイクルは I2Cデバイスからの ACK受信を行います。

B: 送信するデータを送信順に 1Byte単位でTX FIFOに書き込みます。
書き込みが完了したデータから、順次 I2C Busに送信されます。
なお、I2Cデバイスからの ACK受信は 1 Byte毎に毎回行います。

C: 最終 Byteの送信データを TX FIFOに書き込む時、同時に I2C Master TX FIFO RegisterのI2CM_STOPビットに"1"をセットします。
I2C Master Controllerは、最終 Byteのデータ送信と ACK受信の完了後に、I2C BusにSTOP Conditionを送信し、I2C Master Interrupt Status Registerの I2CM_COMP割り込みをセットして、書き込み動作を完了します。

具体的な例として、I2Cデバイスのアドレス 0x67に、0x89, 0xAB, 0xCD, 0xEFのデータを書き込む場合には、I2C Master TX FIFO Registerに以下の書き込みを行います。
1. Register Write, Address Offset: 0x0004, Write Data: 0x000000CE
2. Register Write, Address Offset: 0x0004, Write Data: 0x00000089
3. Register Write, Address Offset: 0x0004, Write Data: 0x000000AB
4. Register Write, Address Offset: 0x0004, Write Data: 0x000000CD
5. Register Write, Address Offset: 0x0004, Write Data: 0x000001EF

TX FIFOの容量を超えるサイズのデータを送信する場合は、TX FIFOがOverflowしないよう書き込み間隔を調整する必要があります。
TX FIFOのデータ格納量のステータスは、I2C Master FIFO Status Registerや TX FIFO関連の割り込みにより、ソフトウェアから確認することができます。
I2C書き込み動作中に、I2CM_STOPビットがセットされない状態でTX FIFOが Emptyとなった場合、I2C通信を一時停止します。
この時、TX FIFOに送信データが書き込まれると、I2C通信を再開します。

次にRepeated Start Conditionを使用した書き込みアクセスの手順を説明します。
この手順はデバイスアドレスとは別にレジスタアドレスを持つ I2Cデバイスとの通信時などで使用します。

#+CAPTION: Repeated Startを使用したI2C書き込みアクセス波形
[[file:./images/i2cm_write_acc_seq_repsta.png]]

A: 前の手順と同様に TX FIFOのBit7-1に I2Cデバイスのアドレス、Bit0(R/Wビット)に"0"(送信モード)を書き込みます。

B: TX FIFOに 送信データの書き込み(ここではI2Cデバイスのレジスタアドレスとします)と同時に、I2C Master TX FIFO RegisterのI2CM_RESTARTビットに"1"をセットします。
I2C Master Controllerはレジスタアドレスの送信後のACK受信が完了すると、Repeated Start Conditionを送信します。

C: Aの手順と同様、再度TX FIFOのBit7-1に I2Cデバイスのアドレスと、Bit0(R/Wビット)に"0"(送信モード)を書き込みます。

D: 送信するデータを 1 Byte単位で送信順にTX FIFOに書き込みます。

E: 最終 Byteの送信データを TX FIFOに書き込む時、同時にI2C Master TX FIFO Registerの I2CM_STOPビットに"1"をセットします。

具体的な例として、アドレス 0x67のI2Cデバイスのレジスタアドレス 0xFEに、0xDC、0xBA、0x98、0x76、0x54のデータを書き込む場合には、I2C Master TX FIFO Registerに以下の書き込みを行います。
1. Register Write, Address Offset: 0x0004, Write Data: 0x000000CE
2. Register Write, Address Offset: 0x0004, Write Data: 0x000002FE
3. Register Write, Address Offset: 0x0004, Write Data: 0x000000CE
4. Register Write, Address Offset: 0x0004, Write Data: 0x000000DC
5. Register Write, Address Offset: 0x0004, Write Data: 0x000000BA
6. Register Write, Address Offset: 0x0004, Write Data: 0x00000098
7. Register Write, Address Offset: 0x0004, Write Data: 0x00000076
8. Register Write, Address Offset: 0x0004, Write Data: 0x00000154

**** データ読み出し操作手順
本章では I2Cデバイスからのデータ読み出しを行う場合の手順を説明します。

I2Cデバイスからデータ読み出しを行う場合の I2C Busの波形を以下に示します。

#+CAPTION: I2C読み出しアクセス波形
[[file:./images/i2cm_read_acc_seq.png]]

A: TX FIFO(I2C Master TX FIFO RegisterのI2CM_TXDATAフィールド)のBit7-1に I2Cデバイスのアドレス7と、Bit0(R/Wビット)に"1"を書き込みます。
I2C Master ControllerはI2C読み出し動作を開始し、I2C BusにStart Condition送信後、TX FIFOに書き込まれたアドレスとR/Wビットを送信します。
データ送信後の次のサイクルは I2Cデバイスからの ACK受信を行います。

B: 受信するデータのByte数から 1を引いた値をTX FIFOに書き込みます。
この時、同時に I2C Master TX FIFO RegisterのI2CM_STOPビットに"1"をセットします。
TX FIFOに設定されたByte数分のデータ受信を行い、受信データを RX FIFOへ格納します。
なお、I2Cデバイスから 1 Byteのデータを受信するたびに I2Cデバイスへの ACK送信を行います。

C: I2C Master Controllerは、最終 Byteのデータ受信後 NACKを送信し、I2C BusにStop Conditionを送信します。
また同時に、I2C Master Interrupt Status RegisterのI2CM_COMP割り込みをセットして、読み出し動作を完了します。

I2C Master Controllerは、最終 Byteのデータ送信と ACK受信の完了後に、I2C BusにSTOP Conditionを送信し、I2C Master Interrupt Status Registerの I2CM_COMP割り込みをセットして、書き込み動作を完了します。

具体的な例として、I2Cデバイスのアドレス 0x67から 4 Byteのデータ読み出す場合は、I2C Master TX FIFO Registerに以下の書き込みを行います。
1. Register Write, Address Offset: 0x0004, Write Data: 0x000000CF
2. Register Write, Address Offset: 0x0004, Write Data: 0x00000103

受信データはI2C Master RX FIFO Registerを読み出すことにより取得できます。
I2C読み出し動作中に、設定したByte数のデータ受信が完了しない状態で RX FIFOが Fullとなった場合、I2C通信を一時停止します。
この時、RX FIFOから受信データが読み出されると、I2C通信を再開します。
RX FIFOの容量を超えるサイズのデータを受信する場合は、RX FIFOのサイズを考慮し RX FIFOから定期的にデータ読み出す必要があります。
RX_FIFOのデータ格納量のステータスは、I2C Master FIFO Status Registerや RX_FIFO関連の割り込みにより、ソフトウェアから確認することができます。


次にRepeated Start Conditionを使用した読み出しアクセスの手順を説明します。
この手順はデバイスアドレスとは別にレジスタアドレスを持つ場合や、10ビットアドレスの I2Cデバイスとの通信時に使用します。

#+CAPTION: Repeated Startを使用したI2C読み出しアクセス波形
[[file:./images/i2cm_read_acc_seq_repsta.png]]

A: 前の手順と同様に、TX FIFOのBit7-1に I2Cデバイスのアドレス、Bit0(R/Wビット)に"0"(送信モード)を書き込みます。

B: TX FIFOに送信データの書き込み(ここではI2Cデバイスのレジスタアドレスとします)と同時に、I2C Master TX FIFO RegisterのI2CM_RESTARTビットに"1"をセットします。
I2C Master Controllerはレジスタアドレスの送信後のACK受信が完了すると、Repeated Start Conditionを送信します。

C: TX FIFOのBit7-1に I2Cデバイスのアドレスと、Bit0(R/Wビット)に"1"を書き込みます。

D: 受信するデータの Byte数から 1を引いた値のTX FIFOに書き込みます。この時 同時にI2C Master TX FIFO RegisterのI2CM_STOPビットに"1"をセットします。

具体的な例として、アドレス 0x67のI2Cデバイスのレジスタアドレス 0xFEから 5 Byteのデータ読み出しを行いたい場合は、I2C Master TX FIFO Registerに以下の書き込みを行います。
1. Register Write, Address Offset: 0x0004, Write Data: 0x000000CE
2. Register Write, Address Offset: 0x0004, Write Data: 0x000002FE
3. Register Write, Address Offset: 0x0004, Write Data: 0x000000CF
4. Register Write, Address Offset: 0x0004, Write Data: 0x00000104
